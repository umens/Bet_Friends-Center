var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interceptors/ApiPrefixInterceptor.html",[0,1.449,1,1.667]],["body/interceptors/ApiPrefixInterceptor.html",[0,1.8,1,2.62,2,0.281,3,0.281,4,0.245,5,5.423,6,4.285,7,1.928,8,3.648,9,3.021,10,5.949,11,0.439,12,0.909,13,4.054,14,4.054,15,3.521,16,3.096,17,3.521,18,0.772,19,4.285,20,0.827,21,0.025,22,0.667,23,0.525,24,0.772,25,0.909,26,2.338,27,0.41,28,1.197,29,0.525,30,2.413,31,3.053,32,1.928,33,1.479,34,3.633,35,3.633,36,0.245,37,0.015,38,1.148,39,4.285,40,2.07,41,4.285,42,3.633,43,0.019,44,0.019]],["title/modules/AppRoutingModule.html",[45,0.713,46,2.579]],["body/modules/AppRoutingModule.html",[2,0.304,3,0.304,4,0.265,21,0.025,27,0.422,29,0.568,36,0.325,37,0.016,43,0.02,44,0.021,45,0.957,46,4.255,47,4.632,48,3.463,49,2.75,50,3.106,51,3.829,52,1.946,53,2.096,54,2.608,55,1.092,56,3.829,57,0.894,58,4.632,59,4.632,60,3.927,61,3.927,62,3.463,63,4.632]],["title/injectables/AuthenticationGuard.html",[28,0.762,64,1.942]],["body/injectables/AuthenticationGuard.html",[2,0.235,3,0.235,4,0.205,11,0.367,12,0.809,16,1.864,18,0.982,20,1.053,21,0.025,22,0.849,23,0.668,24,0.982,25,1.021,26,2.143,27,0.4,28,1.204,29,0.439,33,1.237,36,0.205,37,0.012,38,0.96,40,2.819,43,0.017,44,0.017,52,1.505,55,1.137,64,2.716,65,2.678,66,4.947,67,4.824,68,0.691,69,2.678,70,4.689,71,2.693,72,3.582,73,4.824,74,4.947,75,5.454,76,5.835,77,3.582,78,4.09,79,2.293,80,4.824,81,1.89,82,3.582,83,1.612,84,2.409,85,3.037,86,1.237,87,1.089,88,3.037,89,2.017,90,1.022,91,3.582,92,3.582,93,3.582,94,2.027,95,2.678,96,3.582,97,4.09,98,3.037,99,2.678,100,1.864,101,3.037,102,3.582,103,3.582,104,2.195,105,3.037,106,2.678,107,2.017]],["title/injectables/AuthenticationService.html",[28,0.762,71,1.449]],["body/injectables/AuthenticationService.html",[2,0.152,3,0.152,4,0.132,7,1.92,11,0.237,12,0.8,18,1.043,20,1.044,21,0.025,22,0.549,23,0.585,24,0.634,25,1.059,26,2.21,27,0.231,28,0.942,29,0.284,33,0.799,36,0.244,37,0.008,38,0.944,43,0.012,44,0.012,55,1.124,68,0.823,71,1.48,79,2.278,81,1.821,86,1.647,90,1.544,94,2.435,100,2.482,104,3.711,108,1.418,109,1.297,110,2.37,111,2.633,112,3.377,113,1.545,114,2.633,115,2.633,116,2.402,117,3.189,118,1.071,119,3.565,120,3.565,121,3.208,122,2.923,123,3.523,124,3.523,125,2.313,126,2.37,127,3.214,128,2.37,129,2.89,130,2.313,131,2.37,132,2.313,133,2.146,134,2.159,135,2.37,136,2.633,137,4.073,138,2.313,139,2.304,140,2.923,141,3.314,142,2.633,143,1.833,144,1.984,145,0.852,146,2.53,147,2.313,148,1.961,149,2.313,150,2.313,151,1.984,152,2.159,153,1.418,154,1.702,155,2.402,156,1.702,157,1.556,158,1.418,159,2.633,160,1.729,161,1.729,162,3.189,163,1.729,164,1.677,165,1.729,166,1.041,167,1.556,168,1.556,169,1.729,170,1.729,171,1.729,172,1.729,173,1.729,174,1.556,175,1.556,176,1.418,177,1.556,178,1.729,179,1.729,180,1.729,181,1.729,182,1.729]],["title/modules/BetCenterModule.html",[45,0.713,183,2.32]],["body/modules/BetCenterModule.html",[2,0.272,3,0.272,4,0.237,21,0.025,27,0.441,29,0.508,36,0.303,37,0.014,43,0.019,44,0.019,45,1.097,49,2.565,54,2.334,109,1.527,133,1.866,183,4.662,184,1.742,185,1.527,186,2.83,187,2.003,188,3.515,189,3.515,190,3.515,191,2.405,192,4.003,193,3.678,194,3.678,195,3.254,196,2.541,197,2.789,198,3.515,199,4.146,200,3.572,201,2.334,202,4.146,203,3.515,204,3.515,205,3.515,206,3.515]],["title/modules/BetCenterRoutingModule.html",[45,0.713,192,2.114]],["body/modules/BetCenterRoutingModule.html",[2,0.297,3,0.297,4,0.259,21,0.025,27,0.43,29,0.555,36,0.321,37,0.015,43,0.02,44,0.02,45,0.936,48,3.387,49,2.713,50,3.082,51,3.777,52,1.904,54,2.551,55,1.068,56,3.777,57,0.875,60,3.841,61,3.841,62,3.387,166,2.039,191,2.068,192,3.441,197,3.048,198,3.841,203,3.841,205,3.841,207,4.531,208,3.74,209,2.777,210,3.841]],["title/interceptors/CacheInterceptor.html",[0,1.449,211,1.795]],["body/interceptors/CacheInterceptor.html",[0,2.037,2,0.189,3,0.189,4,0.164,7,1.862,9,2.914,11,0.294,12,0.694,13,3.093,14,3.093,15,2.986,16,2.523,17,2.986,18,0.955,20,0.936,21,0.025,22,0.755,23,0.689,24,1.149,25,0.981,26,1.905,27,0.348,28,0.913,29,0.352,30,1.619,31,2.33,32,1.293,33,0.992,36,0.164,37,0.01,38,0.77,42,3.508,43,0.014,44,0.014,55,0.975,68,0.555,79,1.626,87,1.474,89,1.619,90,1.384,94,1.208,107,2.33,118,1.258,144,1.619,146,2.529,164,1.13,211,2.925,212,2.875,213,3.295,214,3.624,215,1.626,216,4.138,217,4.138,218,2.783,219,3.212,220,3.093,221,3.567,222,2.875,223,3.046,224,4.138,225,4.138,226,3.508,227,2.875,228,3.295,229,2.33,230,2.783,231,2.783,232,2.33,233,3.25,234,2.875,235,0.931,236,0.992,237,3.093,238,4.11,239,2.437,240,2.875,241,2.875,242,2.875,243,2.875,244,2.875,245,3.093,246,2.875,247,2.875,248,2.437,249,2.437,250,2.875,251,2.875,252,2.875,253,2.875,254,2.875,255,1.934,256,4.138,257,4.848,258,1.934,259,2.875,260,2.875,261,1.389,262,2.875]],["title/modules/CoreModule.html",[45,0.713,193,1.942]],["body/modules/CoreModule.html",[1,2.848,2,0.193,3,0.193,4,0.168,21,0.025,24,0.756,27,0.452,29,0.36,32,1.321,36,0.28,37,0.01,43,0.015,44,0.015,45,1.013,49,2.029,50,1.418,51,2.826,52,1.233,53,2.17,64,3.319,68,0.567,71,2.476,109,2.086,133,1.321,184,1.233,185,1.081,186,2.37,187,1.418,193,3.943,195,2.574,196,1.799,200,2.826,201,1.653,211,3.067,223,3.067,239,2.489,263,2.489,264,2.489,265,2.489,266,2.317,267,2.317,268,2.17,269,3.067,270,3.319,271,2.936,272,4.201,273,1.799,274,2.365,275,4.201,276,3.561,277,2.936,278,4.201,279,2.936,280,1.653,281,2.194,282,2.936,283,2.489,284,2.936,285,2.826,286,2.194,287,2.489,288,2.489,289,2.489,290,2.186,291,2.936,292,2.936,293,2.936,294,1.975,295,2.936,296,1.975,297,2.936,298,2.936,299,2.194,300,2.936,301,2.936,302,2.936,303,4.201,304,2.489,305,2.489]],["title/interfaces/Credentials.html",[112,1.667,113,1.118]],["body/interfaces/Credentials.html",[2,0.19,3,0.19,4,0.165,11,0.296,12,0.484,20,0.802,21,0.025,23,0.509,25,1.036,26,2.213,27,0.273,28,0.917,29,0.354,33,0.998,36,0.278,37,0.01,38,0.774,43,0.014,44,0.014,55,1.253,68,0.558,71,1.214,79,2.213,81,2.039,86,1.434,90,1.186,94,2.233,100,1.504,104,3.593,108,1.771,109,1.064,110,1.944,111,2.16,112,3.35,113,1.722,114,2.16,115,2.16,116,2.339,117,3.105,118,1.263,119,2.16,120,2.16,121,1.944,122,1.771,126,1.944,127,3.125,128,1.944,129,2.738,131,1.944,133,1.869,134,1.771,135,1.944,136,2.16,137,3.944,139,2.007,140,2.545,141,2.98,142,2.16,143,1.504,146,2.392,151,1.627,152,2.545,153,1.771,154,2.007,155,3.301,156,2.721,157,1.944,158,1.771,159,3.105,160,2.16,161,2.16,162,3.635,163,2.16,164,1.911,165,2.16,166,1.3,167,1.944,168,1.944,169,2.16,170,2.16,171,2.16,172,2.16,173,2.16,174,1.944,175,1.944,176,1.771,177,1.944,178,2.16,179,2.16,180,2.16,181,2.16,182,2.16]],["title/interceptors/ErrorHandlerInterceptor.html",[0,1.449,269,1.795]],["body/interceptors/ErrorHandlerInterceptor.html",[0,1.573,2,0.246,3,0.246,4,0.214,7,1.685,9,2.694,11,0.383,12,0.833,13,3.714,14,3.714,15,3.344,16,2.902,17,3.344,18,0.895,20,0.959,21,0.025,22,0.774,23,0.609,24,0.895,25,0.935,26,2.429,27,0.417,28,1.097,29,0.459,30,3.344,31,2.797,32,1.685,33,1.293,34,3.174,35,3.174,36,0.214,37,0.013,38,1.003,43,0.017,44,0.017,55,0.882,83,1.685,84,2.518,86,1.293,87,1.138,90,1.592,152,2.294,154,1.809,235,1.806,249,4.727,261,2.986,269,2.585,306,4.168,307,2.799,308,3.342,309,3.14,310,4.968,311,4.968,312,3.744,313,3.744,314,3.744,315,3.174,316,3.174,317,3.744,318,3.744,319,2.294,320,3.174,321,3.744,322,3.744,323,3.744]],["title/components/FooterComponent.html",[57,0.666,266,1.356]],["body/components/FooterComponent.html",[2,0.257,3,0.257,4,0.224,11,0.401,12,0.859,18,0.922,21,0.025,22,0.797,25,0.657,27,0.257,29,0.481,36,0.224,37,0.013,38,1.372,43,0.018,44,0.018,53,1.444,57,1.211,68,1.101,145,1.444,154,2.474,185,1.444,191,1.444,266,2.377,267,1.541,268,1.444,324,1.894,325,2.04,326,2.04,327,3.324,328,2.968,329,2.04,330,3.499,331,3.248,332,6.048,333,2.665,334,5.122,335,2.665,336,5.122,337,3.147,338,3.921,339,3.921,340,3.445,341,5.122,342,3.828,343,2.665,344,2.474,345,2.665,346,3.147,347,2.04,348,2.04,349,2.04,350,2.04,351,1.541,352,2.04,353,1.444,354,2.04,355,2.04,356,1.894,357,2.04]],["title/components/HeaderComponent.html",[57,0.666,267,1.356]],["body/components/HeaderComponent.html",[2,0.205,3,0.205,4,0.178,11,0.319,12,0.735,18,1.082,20,0.602,21,0.025,22,0.79,23,0.382,24,0.561,25,0.922,27,0.333,29,0.382,36,0.178,37,0.011,38,1.174,43,0.015,44,0.015,52,1.31,53,1.148,55,0.735,57,1.119,68,0.846,69,2.331,70,4.494,71,2.595,81,1.01,90,1.251,94,2.13,105,2.643,106,2.331,112,2.118,118,1.333,122,3.684,143,2.281,145,1.867,146,1.973,148,2.643,155,3.097,185,1.148,191,1.148,208,2.687,235,1.01,236,1.076,238,2.643,266,1.225,267,2.162,268,1.148,288,2.643,324,1.506,325,1.622,326,1.622,328,2.639,329,1.622,330,3.335,331,3.096,333,2.281,335,2.281,337,2.863,343,2.281,344,2.118,345,2.281,346,2.863,347,1.622,348,1.622,349,1.622,350,1.622,351,1.225,352,1.622,353,1.148,354,1.622,355,1.622,356,1.506,357,1.622,358,2.643,359,4.384,360,4.384,361,4.384,362,5.501,363,5.501,364,4.384,365,3.118,366,3.118,367,3.118,368,3.118,369,3.118,370,4.384,371,3.118,372,3.118,373,2.643,374,4.384,375,4.384,376,3.717,377,2.281,378,4.384,379,4.384]],["title/components/HomeComponent.html",[57,0.666,191,1.27]],["body/components/HomeComponent.html",[2,0.232,3,0.232,4,0.202,11,0.362,12,0.802,18,1.045,21,0.025,22,0.745,23,0.586,25,0.593,27,0.232,29,0.433,36,0.202,37,0.012,38,1.281,43,0.017,44,0.017,53,1.302,57,1.17,68,1.046,79,2.129,81,1.755,94,1.486,107,1.991,118,1.454,145,1.302,185,1.302,191,2.137,197,4.079,208,2.931,266,1.39,267,1.39,268,1.302,324,1.708,325,1.84,326,1.84,328,2.82,329,1.84,330,3.428,331,3.182,333,2.489,335,2.489,337,3.021,343,2.489,344,2.31,345,2.489,346,3.021,347,1.84,348,1.84,349,1.84,350,1.84,351,1.39,352,1.84,353,1.302,354,1.84,355,1.84,356,1.708,357,1.84,380,2.998,381,4.782,382,4.782,383,4.339,384,6.25,385,4.782,386,3.536,387,3.536,388,4.054,389,3.536,390,3.536,391,2.644,392,2.998,393,3.536,394,4.782,395,4.782]],["title/interfaces/HttpCacheEntry.html",[113,1.118,396,2.32]],["body/interfaces/HttpCacheEntry.html",[2,0.158,3,0.158,4,0.137,9,3.001,11,0.246,21,0.025,23,0.445,25,0.875,27,0.319,28,0.801,29,0.295,32,1.082,36,0.207,37,0.008,40,3.001,43,0.013,44,0.013,55,1.146,68,0.464,81,1.981,83,1.082,84,1.617,86,0.83,87,1.103,90,1.388,109,1.335,113,1.175,118,1.103,134,2.981,139,2.11,140,3.491,141,2.677,143,1.251,145,0.885,146,2.752,151,2.042,153,1.473,164,2.305,166,2.919,176,3.199,213,3.705,214,1.797,215,0.945,219,1.251,220,1.797,223,1.251,228,1.354,232,2.939,235,0.779,236,1.252,237,4.103,245,1.797,396,3.692,397,1.617,398,1.617,399,4.972,400,5.338,401,2.038,402,1.797,403,1.617,404,1.797,405,2.038,406,3.075,407,4.426,408,3.075,409,4.83,410,3.075,411,2.038,412,2.038,413,4.124,414,3.703,415,3.703,416,3.703,417,2.038,418,3.075,419,2.038,420,2.038,421,2.038,422,2.038,423,3.075,424,2.038,425,2.038,426,3.703,427,2.038,428,2.038,429,2.038,430,2.038,431,2.038,432,3.075,433,2.038,434,1.797,435,2.038,436,2.038,437,3.703,438,2.038,439,2.038,440,2.038,441,3.703,442,2.038,443,2.038,444,3.075,445,2.038,446,2.038,447,2.038]],["title/injectables/HttpCacheService.html",[28,0.762,223,1.795]],["body/injectables/HttpCacheService.html",[2,0.113,3,0.113,4,0.098,7,2.259,9,3.102,11,0.176,12,0.467,18,1.023,20,0.92,21,0.025,22,0.742,23,0.681,24,0.858,25,0.987,27,0.266,28,0.777,29,0.211,32,0.773,36,0.159,37,0.006,40,3.039,43,0.01,44,0.01,55,0.954,68,0.679,81,2.022,83,0.773,84,1.156,86,0.593,87,0.848,90,1.653,109,1.49,113,0.557,118,0.848,134,3.076,139,2.15,140,3.55,141,2.921,143,1.451,144,1.981,145,1.848,146,2.783,151,2.279,153,1.709,164,2.055,166,2.831,176,3.55,213,3.789,214,2.085,215,1.096,219,1.451,220,1.285,223,1.451,226,2.364,228,1.57,232,3.127,235,1.311,236,1.536,237,3.752,245,3.026,396,3.206,397,3.896,398,1.156,399,4.256,400,5.29,401,1.457,402,1.285,403,1.156,404,1.285,405,2.364,406,3.432,407,3.773,408,2.364,409,5.066,410,2.364,411,2.364,412,2.364,413,3.432,414,2.983,415,2.983,416,4.04,417,2.364,418,2.364,419,1.457,420,1.457,421,2.364,422,2.364,423,2.364,424,2.364,425,2.364,426,3.432,427,2.364,428,2.364,429,1.457,430,1.457,431,1.457,432,2.364,433,2.364,434,2.085,435,2.364,436,1.457,437,4.04,438,2.364,439,2.364,440,1.457,441,2.983,442,1.457,443,3.432,444,2.364,445,1.457,446,3.432,447,1.457,448,2.789,449,2.789,450,2.789,451,2.789,452,2.789,453,2.789,454,2.789,455,1.719,456,1.719,457,1.719,458,1.719,459,1.719,460,1.719,461,1.719,462,1.719,463,1.719]],["title/interfaces/HttpClient.html",[113,1.118,274,1.942]],["body/interfaces/HttpClient.html",[0,2.598,1,1.726,2,0.155,3,0.155,4,0.135,7,1.06,8,2.403,9,2.939,11,0.241,12,0.807,15,2.011,16,1.859,17,2.914,18,0.777,20,0.455,21,0.025,22,0.367,23,0.289,24,0.932,25,1.063,26,1.404,27,0.357,28,1.063,29,0.289,30,1.327,31,2.711,32,1.06,33,0.813,36,0.275,37,0.012,38,0.631,40,1.726,43,0.012,44,0.012,45,0.891,55,1.017,68,0.455,79,2.034,87,1.88,89,2.011,90,1.477,113,1.157,116,1.327,144,1.327,154,1.138,156,1.138,164,0.926,184,0.99,186,1.726,211,1.859,213,3.066,215,2.034,218,2.902,219,2.506,221,2.902,228,2.429,229,2.429,230,2.403,231,2.403,232,2.011,233,3.338,235,1.56,258,1.585,261,2.084,269,1.226,273,1.444,274,3.756,290,3.033,294,1.585,296,1.585,309,2.429,319,1.444,340,1.585,377,1.859,464,1.444,465,3.868,466,3.868,467,3.225,468,2.356,469,2.356,470,2.356,471,2.67,472,1.761,473,3.225,474,1.761,475,1.761,476,2.902,477,2.67,478,1.761,479,1.585,480,1.761,481,1.585,482,1.761,483,1.761,484,1.761,485,1.761,486,2.644,487,1.761,488,1.761,489,1.444,490,1.761,491,1.761,492,1.761,493,2.403,494,2.189,495,1.585,496,1.585,497,1.585,498,1.585,499,2.403,500,1.585,501,1.585,502,1.585,503,1.327,504,1.585,505,1.585,506,1.444,507,1.585,508,1.761,509,1.761,510,1.761,511,2.67,512,1.761,513,1.761,514,1.761,515,1.761,516,1.761,517,1.761,518,1.761,519,1.761,520,1.761,521,1.761,522,1.761,523,3.225,524,1.761,525,1.761,526,1.06,527,2.67,528,1.761,529,1.761,530,1.761,531,1.761]],["title/classes/HttpInterceptorHandler.html",[37,0.012,489,2.114]],["body/classes/HttpInterceptorHandler.html",[0,2.683,1,1.772,2,0.16,3,0.16,4,0.139,8,1.641,9,2.766,11,0.25,12,0.821,15,2.759,16,2.293,17,3.317,18,0.66,20,0.708,21,0.025,22,0.571,23,0.449,24,0.994,25,1.045,26,1.732,27,0.362,28,1.082,29,0.299,30,1.373,31,3.107,32,1.098,33,0.842,36,0.28,37,0.015,38,0.982,40,1.772,43,0.013,44,0.013,45,0.91,55,1.038,68,0.708,79,1.732,87,1.791,89,2.065,90,1.5,113,0.79,116,1.373,154,1.178,156,1.178,164,0.959,184,1.025,186,1.772,211,1.908,213,2.065,215,1.926,218,2.467,219,2.55,221,2.467,228,2.065,229,2.065,230,1.641,231,1.641,232,1.373,233,2.7,235,1.427,258,1.641,261,1.772,269,1.269,273,1.495,274,3.689,290,3.065,294,1.641,296,1.641,309,2.065,319,1.495,340,1.641,377,1.908,464,1.495,465,2.741,466,2.741,467,2.741,471,1.823,472,1.823,473,3.294,474,1.823,475,1.823,476,2.964,477,2.741,478,1.823,479,1.641,480,1.823,481,1.641,482,1.823,483,1.823,484,1.823,485,1.823,486,2.7,487,1.823,488,1.823,489,2.247,490,2.741,491,1.823,492,1.823,493,2.467,494,2.247,495,1.641,496,1.641,497,1.641,498,1.641,499,2.467,500,1.641,501,1.641,502,1.641,503,1.373,504,1.641,505,1.641,506,1.495,507,1.641,508,1.823,509,1.823,510,1.823,511,2.741,512,1.823,513,1.823,514,1.823,515,1.823,516,1.823,517,1.823,518,1.823,519,1.823,520,1.823,521,1.823,522,1.823,523,3.294,524,1.823,525,1.823,526,1.098,527,2.741,528,1.823,529,1.823,530,1.823,531,1.823,532,3.667,533,2.439,534,2.439,535,2.439]],["title/injectables/HttpService.html",[28,0.762,290,1.795]],["body/injectables/HttpService.html",[0,2.674,1,1.621,2,0.142,3,0.142,4,0.124,7,0.977,8,1.46,9,2.816,11,0.222,12,0.836,15,1.889,16,1.746,17,3.197,18,0.99,20,0.963,21,0.025,22,0.777,23,0.611,24,1.091,25,1.076,26,1.319,27,0.346,28,1.101,29,0.266,30,1.222,31,3.197,32,0.977,33,0.75,36,0.264,37,0.011,38,0.582,40,2.229,43,0.012,44,0.012,45,0.847,55,0.966,68,0.648,79,1.96,87,1.727,89,1.889,90,1.664,113,0.703,116,1.222,144,2.598,154,1.049,156,1.049,164,0.853,184,0.912,186,1.621,211,1.746,213,2.598,215,1.96,218,2.257,219,2.596,221,2.759,228,1.889,229,1.889,230,1.46,231,1.46,232,1.222,233,2.513,235,1.329,258,1.46,261,1.621,269,1.13,273,1.331,274,3.711,290,3.154,294,1.46,296,1.46,309,1.889,319,1.331,340,1.46,377,1.746,464,1.331,465,3.729,466,3.729,467,3.066,471,1.623,472,1.623,473,4.109,474,1.623,475,1.623,476,3.103,477,2.508,478,1.623,479,1.46,480,1.623,481,1.46,482,1.623,483,1.623,484,1.623,485,1.623,486,2.513,487,1.623,488,1.623,489,1.331,490,1.623,491,1.623,492,1.623,493,2.257,494,2.513,495,1.46,496,1.46,497,1.46,498,1.46,499,2.257,500,1.46,501,1.46,502,1.46,503,1.222,504,1.46,505,1.46,506,1.331,507,1.46,508,2.508,509,1.623,510,1.623,511,2.508,512,1.623,513,1.623,514,1.623,515,1.623,516,1.623,517,1.623,518,1.623,519,1.623,520,2.508,521,1.623,522,1.623,523,3.066,524,1.623,525,2.508,526,1.845,527,2.508,528,1.623,529,2.508,530,2.508,531,1.623,536,3.356,537,3.356,538,2.171,539,2.171,540,2.171,541,2.171,542,2.171,543,2.171,544,2.171,545,2.171]],["title/components/LoaderComponent.html",[57,0.666,351,1.356]],["body/components/LoaderComponent.html",[2,0.249,3,0.249,4,0.217,11,0.388,12,0.84,18,1.075,21,0.025,22,0.781,23,0.465,25,0.636,27,0.249,29,0.465,36,0.217,37,0.013,38,1.343,43,0.017,44,0.017,53,1.397,57,1.198,68,1.084,81,1.624,107,2.823,145,1.397,185,1.397,191,1.397,235,1.229,236,1.31,266,1.492,267,1.492,268,1.397,324,1.833,325,1.975,326,1.975,328,2.921,329,1.975,330,3.477,331,3.228,333,2.609,335,2.609,337,3.108,343,2.609,344,2.422,345,2.609,346,3.108,347,1.975,348,1.975,349,1.975,350,1.975,351,2.347,352,1.975,353,1.397,354,1.975,355,1.975,356,1.833,357,1.975,383,4.196,546,3.218,547,5.013,548,5.013,549,5.013,550,6.209,551,5.264,552,5.013,553,3.795,554,3.795]],["title/classes/Logger.html",[37,0.012,83,1.552]],["body/classes/Logger.html",[2,0.367,3,0.327,4,0.144,11,0.258,12,0.631,18,1.095,20,1.079,21,0.025,22,0.87,23,0.729,24,1.006,25,0.937,36,0.257,37,0.013,43,0.013,44,0.013,68,0.487,81,1.615,83,1.693,86,2.314,89,1.422,90,1.284,118,1.144,139,2.408,143,1.958,144,1.422,145,2.132,229,2.119,235,1.219,236,1.299,255,4.53,261,2.575,309,1.422,377,1.958,479,4.003,503,3.425,526,2.243,551,5.045,555,1.698,556,5.733,557,4.329,558,4.52,559,4.985,560,4.52,561,2.525,562,2.525,563,4.498,564,2.525,565,3.763,566,3.763,567,3.726,568,2.525,569,3.763,570,3.763,571,2.525,572,5.951,573,5.951,574,2.525,575,2.813,576,3.763,577,4.985,578,3.763,579,2.525,580,3.763,581,2.525,582,3.763,583,4.52,584,2.525,585,2.525,586,3.763,587,2.525,588,2.525,589,1.887,590,2.525,591,2.525,592,2.525,593,2.525,594,2.525,595,2.525,596,2.525,597,2.525,598,2.525,599,2.525]],["title/components/LoginComponent.html",[57,0.666,353,1.27]],["body/components/LoginComponent.html",[2,0.164,3,0.164,4,0.143,11,0.256,12,0.626,18,1.04,20,0.483,21,0.025,22,0.697,23,0.608,24,0.45,25,0.75,27,0.366,29,0.307,36,0.143,37,0.009,38,1.001,40,1.209,43,0.013,44,0.013,52,1.051,53,0.921,54,1.409,55,1.054,57,1.025,68,0.721,69,1.87,70,4.165,71,2.426,81,1.449,83,1.126,86,1.544,87,1.136,90,1.648,94,1.879,97,4.207,98,3.168,100,3.089,106,1.87,107,2.519,118,1.136,127,1.209,135,1.683,137,3.009,139,1.209,145,1.647,155,2.99,157,3.883,185,0.921,191,0.921,208,1.533,209,1.533,215,0.983,235,1.211,236,0.864,261,2.867,266,0.983,267,0.983,268,0.921,270,3.251,280,2.794,315,2.121,324,1.209,325,1.302,326,1.302,328,2.328,329,1.302,330,3.157,331,2.931,333,1.945,335,1.945,337,2.582,342,1.87,343,1.945,344,1.805,345,1.945,346,2.582,347,1.302,348,1.302,349,1.302,350,1.302,351,0.983,352,1.302,353,1.827,354,1.302,355,1.302,356,1.209,357,1.302,373,2.121,383,3.709,388,3.168,600,1.87,601,3.737,602,3.737,603,4.962,604,4.962,605,5.774,606,3.737,607,2.502,608,2.502,609,2.502,610,2.502,611,4.962,612,2.502,613,2.502,614,1.87,615,2.502,616,1.87,617,2.121,618,2.121,619,2.502,620,2.502,621,2.502,622,2.502,623,2.502,624,2.502,625,2.502,626,2.502,627,2.502,628,2.502,629,2.502,630,2.502,631,2.502,632,2.502,633,2.502,634,2.502,635,2.502,636,3.737,637,3.168,638,3.737,639,3.737,640,3.168,641,3.737,642,4.962,643,2.502,644,3.737,645,3.737]],["title/interfaces/LoginContext.html",[113,1.118,129,1.942]],["body/interfaces/LoginContext.html",[2,0.187,3,0.187,4,0.163,11,0.291,12,0.477,20,0.793,21,0.025,23,0.591,24,0.74,25,1.032,26,2.2,27,0.27,28,0.907,29,0.349,33,0.982,36,0.275,37,0.01,38,0.762,43,0.014,44,0.014,55,1.244,68,0.549,71,1.195,79,2.363,81,2.032,86,1.418,90,1.172,94,2.217,100,1.481,104,3.574,108,1.744,109,1.047,110,1.914,111,2.127,112,3.335,113,1.71,114,2.127,115,2.127,116,2.313,117,3.07,118,1.249,119,2.127,120,2.127,121,1.914,122,1.744,126,1.914,127,3.115,128,1.914,129,2.972,131,1.914,133,1.848,134,1.744,135,1.914,136,2.127,137,4.218,139,1.984,140,2.517,141,2.954,142,2.127,143,1.481,146,2.375,151,1.602,152,2.517,153,1.744,154,1.984,155,3.284,156,1.984,157,3.55,158,1.744,159,3.07,160,2.127,161,2.127,162,3.603,163,2.127,164,1.894,165,2.127,166,1.28,167,1.914,168,1.914,169,2.127,170,2.127,171,2.127,172,2.127,173,2.127,174,1.914,175,1.914,176,1.744,177,1.914,178,2.127,179,2.127,180,2.127,181,2.127,182,2.127]],["title/classes/MockAuthenticationService.html",[37,0.012,646,2.579]],["body/classes/MockAuthenticationService.html",[2,0.262,3,0.262,4,0.228,11,0.408,12,0.868,18,1.096,20,0.769,21,0.025,22,0.621,23,0.635,24,0.718,25,1.084,26,2.479,27,0.34,33,1.376,36,0.228,37,0.018,43,0.018,44,0.018,79,2.035,85,3.38,100,2.694,112,3.223,118,1.574,121,4.094,122,3.73,128,3.483,129,3.427,131,2.682,146,2.739,155,3.237,156,2.778,167,2.682,168,2.682,174,2.682,175,3.483,235,1.291,236,1.376,391,3.87,646,3.87,647,3.38,648,5.178,649,3.987,650,3.987,651,3.987,652,3.987]],["title/components/NotFoundComponent.html",[53,1.27,57,0.666]],["body/components/NotFoundComponent.html",[2,0.176,3,0.176,4,0.153,11,0.274,12,0.658,18,1.028,20,0.516,21,0.025,22,0.725,23,0.57,24,0.482,25,0.78,27,0.305,29,0.328,36,0.153,37,0.009,38,1.052,43,0.014,44,0.014,53,1.888,55,0.926,57,1.054,68,0.758,90,1.559,101,4.347,118,1.194,145,2.102,185,0.985,191,0.985,201,1.506,208,3.709,209,3.142,266,1.051,267,1.051,268,0.985,299,4.41,324,1.292,325,1.392,326,1.392,328,2.422,329,1.392,330,3.214,331,2.983,333,2.044,335,2.044,337,2.668,343,2.044,344,1.897,345,2.044,346,2.668,347,1.392,348,1.392,349,1.392,350,1.392,351,1.051,352,1.392,353,0.985,354,1.392,355,1.392,356,1.292,357,1.392,376,3.33,637,4.347,653,5.002,654,2.268,655,4.653,656,3.927,657,3.927,658,3.927,659,5.127,660,5.127,661,5.127,662,5.127,663,2.675,664,5.127,665,4.653,666,3.927,667,3.927,668,2.675,669,2.675,670,2.675,671,4.653,672,2.675,673,3.945,674,2.268,675,2,676,2.675,677,2.675,678,2.675,679,2.268,680,2.268,681,2.675,682,2.675,683,2.675,684,2.675,685,2.675,686,3.927,687,2.675,688,2.675,689,2.675,690,2.675,691,2.675,692,2.675,693,2.675,694,2.675,695,2.675,696,2.675,697,3.927,698,5.127,699,3.927,700,5.127,701,5.127,702,5.127,703,5.127,704,5.13,705,6.052,706,3.927,707,2.675,708,3.927,709,3.927,710,3.927,711,3.927,712,3.927,713,2.675]],["title/classes/Notification.html",[37,0.012,280,1.942]],["body/classes/Notification.html",[2,0.293,3,0.293,4,0.255,11,0.458,18,1.143,20,0.863,21,0.025,22,0.696,23,0.837,24,0.805,27,0.293,36,0.255,37,0.019,43,0.019,44,0.019,68,0.863,81,2.157,118,1.693,209,3.891,236,1.922,255,4.08,280,3.415,342,4.746,616,4.746,714,3.79,715,4.721,716,5.569,717,4.47,718,4.47,719,4.47,720,3.79]],["title/injectables/NotificationService.html",[28,0.762,270,1.942]],["body/injectables/NotificationService.html",[2,0.269,3,0.269,4,0.234,11,0.419,12,0.883,18,1.049,20,0.79,21,0.025,22,0.638,23,0.502,24,0.737,25,0.686,27,0.382,28,1.286,29,0.502,33,1.414,36,0.234,37,0.014,43,0.018,44,0.018,87,1.602,90,1.662,118,1.602,145,1.508,164,1.609,235,1.707,236,1.819,270,3.279,280,3.874,324,2.545,617,3.472,721,3.472,722,6.149,723,5.268,724,5.268,725,4.095,726,5.268,727,4.938,728,5.268,729,5.268,730,5.268,731,4.095,732,5.824,733,4.095,734,4.095,735,3.472,736,4.095]],["title/classes/Route.html",[37,0.012,50,1.667]],["body/classes/Route.html",[2,0.255,3,0.255,4,0.222,7,2.29,11,0.398,12,1.01,18,0.699,20,0.75,21,0.025,22,0.605,23,0.476,24,0.699,25,0.952,27,0.373,36,0.222,37,0.017,43,0.018,44,0.018,50,3.405,52,1.632,56,2.613,57,1.096,64,2.866,66,3.293,87,1.548,94,1.632,99,2.903,104,3.119,109,1.874,110,3.424,164,1.527,166,1.748,215,2.368,233,2.38,248,5.108,268,2.09,283,3.293,289,3.293,308,3.424,356,2.911,503,3.197,737,3.293,738,5.09,739,5.09,740,5.09,741,3.884,742,5.678,743,3.884,744,4.315,745,3.884,746,3.884,747,3.884]],["title/classes/RouteReusableStrategy.html",[37,0.012,285,2.32]],["body/classes/RouteReusableStrategy.html",[2,0.203,3,0.203,4,0.177,7,1.395,11,0.317,12,0.732,18,1.042,20,1.116,21,0.025,22,0.901,23,0.709,24,1.042,25,1.073,27,0.203,36,0.177,37,0.015,43,0.015,44,0.015,50,3.198,52,1.303,74,5.835,79,2.359,94,1.835,95,3.264,107,2.459,145,1.608,146,2.7,166,1.965,215,1.716,276,4.286,285,2.937,286,4.486,287,3.702,308,2.937,476,2.937,486,2.676,744,5.088,748,5.088,749,2.628,750,4.367,751,4.367,752,4.367,753,4.367,754,4.367,755,5.731,756,4.367,757,4.367,758,4.367,759,4.367,760,4.367,761,3.1,762,6.001,763,4.367,764,3.1,765,4.367,766,3.1,767,4.367,768,5.055,769,3.1,770,3.1,771,4.367,772,5.055,773,3.1,774,3.1,775,3.1,776,3.1]],["title/modules/SharedModule.html",[45,0.713,194,1.942]],["body/modules/SharedModule.html",[2,0.294,3,0.294,4,0.256,21,0.025,27,0.417,29,0.549,36,0.363,37,0.015,43,0.019,44,0.019,45,1.152,49,2.695,109,1.65,133,2.017,184,1.883,185,1.65,186,2.934,187,2.165,194,3.805,195,3.418,196,2.747,200,3.752,201,2.524,351,2.753,777,3.8,778,3.8,779,3.8,780,4.482,781,4.482]],["title/components/ShellComponent.html",[57,0.666,268,1.27]],["body/components/ShellComponent.html",[2,0.276,3,0.276,4,0.24,18,0.758,21,0.025,22,0.835,27,0.276,29,0.516,36,0.24,37,0.014,43,0.019,44,0.019,53,1.55,57,1.238,68,1.139,185,1.55,191,1.55,266,1.654,267,1.654,268,2.287,324,2.034,325,2.191,326,2.191,329,2.191,330,3.545,331,3.291,333,2.79,335,2.79,343,2.79,344,2.59,345,2.79,346,3.233,347,2.191,348,2.191,349,2.191,350,2.191,351,1.654,352,2.191,353,1.55,354,2.191,355,2.191,356,2.85,357,2.191,782,3.569,783,5.362,784,5.362,785,4.209]],["title/classes/User.html",[37,0.012,127,1.667]],["body/classes/User.html",[2,0.225,3,0.225,4,0.196,11,0.351,12,0.785,18,1.162,20,0.661,21,0.025,22,0.83,23,0.759,24,0.617,25,1.082,36,0.196,37,0.016,43,0.016,44,0.016,62,3.499,68,0.661,81,2.247,118,1.423,127,3.117,177,3.148,236,1.616,255,3.586,640,5.085,673,4.52,715,3.968,720,2.905,735,3.968,755,4.52,786,2.905,787,5.998,788,5.998,789,5.998,790,5.998,791,5.729,792,6.191,793,4.681,794,3.427,795,3.427,796,3.427,797,3.427,798,3.427,799,4.681,800,3.427,801,3.968,802,4.681,803,4.681,804,4.681,805,4.681,806,4.681,807,3.427,808,3.427,809,3.427,810,3.427]],["title/modules/UserModule.html",[45,0.713,811,2.32]],["body/modules/UserModule.html",[2,0.281,3,0.281,4,0.245,21,0.025,27,0.449,29,0.525,36,0.31,37,0.015,43,0.019,44,0.019,45,1.12,49,2.62,54,2.413,109,1.578,127,2.07,133,1.928,184,1.8,185,1.578,186,2.874,187,2.07,193,2.413,194,2.413,195,3.323,196,2.626,200,3.648,201,2.413,204,3.633,206,3.633,353,2.426,614,3.203,811,4.554,812,3.633,813,3.633,814,3.633,815,4.038,816,4.285,817,5.423,818,3.633]],["title/modules/UserRoutingModule.html",[45,0.713,815,2.114]],["body/modules/UserRoutingModule.html",[2,0.312,3,0.312,4,0.271,21,0.025,27,0.426,29,0.582,36,0.33,37,0.016,43,0.02,44,0.02,45,0.982,48,3.552,49,2.793,50,3.011,51,3.889,52,1.996,55,1.12,56,3.196,57,0.917,100,3.009,166,2.138,209,2.912,210,4.028,353,2.129,815,3.543,818,4.028,819,4.752]],["title/coverage.html",[820,3.986]],["body/coverage.html",[4,0.183,21,0.025,23,0.393,27,0.211,28,1.293,37,0.021,43,0.016,44,0.016,50,1.55,53,1.181,57,1.202,64,1.806,65,3.343,71,1.348,83,1.444,86,1.923,87,0.975,108,3.414,112,1.55,113,1.805,127,1.55,129,1.806,158,1.966,187,1.55,191,1.181,197,2.158,223,1.67,266,1.261,267,1.261,268,1.181,270,1.806,274,1.806,280,1.806,281,2.398,285,2.158,286,2.398,290,1.67,299,2.398,306,2.398,307,2.398,327,2.72,351,1.261,353,1.181,358,2.72,380,2.72,396,2.158,397,3.747,398,3.747,403,2.158,464,3.414,489,1.966,506,1.966,526,1.444,546,2.72,555,2.158,589,5.223,600,3.343,646,2.398,647,2.72,653,2.72,654,2.72,714,2.72,721,2.72,737,2.72,748,2.72,749,2.72,782,2.72,786,2.72,820,2.72,821,3.208,822,3.208,823,3.208,824,5.571,825,4.473,826,4.821,827,6.45,828,3.208,829,3.208,830,5.571,831,3.208,832,3.208,833,3.208,834,3.208,835,3.208,836,3.208,837,4.473,838,3.208,839,3.208,840,3.208,841,2.72,842,2.72,843,3.208,844,3.208,845,3.208,846,3.208,847,3.208,848,3.208,849,3.208,850,3.208,851,3.208,852,3.208,853,3.208,854,2.72,855,2.72,856,2.72,857,3.208,858,3.208]],["title/dependencies.html",[184,1.742,859,2.884]],["body/dependencies.html",[21,0.025,29,0.586,33,1.65,43,0.02,44,0.02,52,2.008,54,2.691,184,2.008,187,2.309,201,2.691,494,2.929,614,3.573,674,4.919,675,4.337,860,4.779,861,6.961,862,4.779,863,4.779,864,4.779,865,4.779,866,4.779,867,4.779,868,4.779,869,4.779,870,4.779,871,4.779,872,4.779,873,4.779]],["title/miscellaneous/enumerations.html",[874,1.393,875,3.516]],["body/miscellaneous/enumerations.html",[2,0.403,11,0.376,12,0.615,21,0.024,24,0.661,27,0.241,36,0.21,37,0.012,38,0.983,43,0.017,44,0.017,55,0.865,57,0.708,83,2.651,86,2.12,87,1.116,109,1.351,139,1.773,152,2.249,236,2.351,261,3.052,308,3.297,320,3.111,328,1.91,337,1.91,377,1.91,392,4.156,481,2.468,526,1.651,555,2.468,556,4.995,557,3.664,558,5.205,560,4.68,567,2.743,575,2.743,583,4.156,589,4.127,616,3.664,679,4.156,680,4.156,727,3.111,874,1.773,875,3.111,876,3.669,877,3.111,878,3.669,879,4.902,880,3.669,881,3.111,882,4.902,883,4.68,884,3.111,885,3.669,886,3.669,887,3.669,888,3.669,889,3.669,890,3.669,891,4.902,892,3.669,893,5.52,894,3.669,895,4.902,896,4.902,897,4.902,898,4.902,899,3.669,900,3.669,901,3.669,902,3.669,903,3.669,904,3.669,905,3.669,906,3.669,907,3.669,908,3.669,909,3.669,910,3.669,911,3.669,912,3.669,913,3.669,914,3.669,915,3.669]],["title/miscellaneous/functions.html",[526,1.866,874,1.393]],["body/miscellaneous/functions.html",[11,0.532,20,1.003,21,0.023,22,0.809,23,0.637,24,0.936,27,0.4,43,0.021,44,0.021,281,4.561,304,4.407,305,4.407,526,2.339,841,4.407,842,5.172,874,2.511,916,5.199,917,6.101,918,5.199]],["title/index.html",[11,0.295,151,1.624,919,2.884]],["body/index.html",[3,0.279,4,0.243,21,0.019,22,0.662,43,0.019,44,0.019,57,1.144,87,1.293,95,3.179,99,3.179,126,2.86,133,1.913,215,2.33,331,2.054,391,4.81,434,3.179,575,3.179,704,3.605,801,3.605,920,4.252,921,5.397,922,6.235,923,5.928,924,5.928,925,4.252,926,4.252,927,5.397,928,6.68,929,6.68,930,4.252,931,4.252,932,4.252,933,4.252,934,4.252,935,4.252,936,4.252,937,4.252,938,6.435,939,4.252,940,4.252,941,4.252,942,4.252,943,4.252,944,5.397,945,5.397,946,5.397,947,4.252,948,6.235,949,4.252,950,4.252,951,4.252,952,5.928,953,4.252,954,4.252]],["title/modules.html",[45,0.971]],["body/modules.html",[21,0.021,43,0.021,44,0.021,45,1.035,46,3.745,183,3.37,192,3.07,193,2.821,194,2.821,675,4.934,811,3.37,815,3.07,881,5.406,955,6.376,956,6.915,957,6.601,958,6.601]],["title/overview.html",[959,3.986]],["body/overview.html",[1,2.673,21,0.025,28,0.814,36,0.211,37,0.013,43,0.017,44,0.017,45,1.016,53,2.037,57,0.711,64,3.115,71,2.324,109,1.357,113,1.194,133,1.658,183,4.513,184,1.548,185,1.357,186,1.781,187,1.781,188,3.125,189,3.125,190,3.125,191,2.037,192,3.391,193,3.996,194,3.561,195,3.013,196,2.259,211,2.879,223,2.879,263,3.125,264,3.125,265,3.125,266,2.174,267,2.174,268,2.037,269,2.879,270,3.115,351,2.538,353,2.037,777,3.125,778,3.125,779,3.125,811,4.254,812,3.125,813,3.125,814,3.125,815,3.391,883,3.125,884,3.125,959,3.125,960,5.533]],["title/miscellaneous/typealiases.html",[874,1.393,961,4.148]],["body/miscellaneous/typealiases.html",[11,0.544,21,0.022,23,0.651,43,0.022,44,0.022,86,1.835,309,2.993,526,2.781,555,3.575,557,3.973,567,4.885,874,2.568,877,4.506,962,5.315]],["title/miscellaneous/variables.html",[826,3.1,874,1.393]],["body/miscellaneous/variables.html",[0,2.284,1,1.719,11,0.364,21,0.025,23,0.589,43,0.017,44,0.017,45,0.735,49,2.32,55,1.281,65,2.661,68,0.687,78,3.017,81,1.885,86,2.339,87,1.848,88,3.017,108,2.181,112,1.719,156,1.719,158,3.331,187,2.811,215,1.399,219,1.852,229,2.004,235,2.16,236,2.277,273,2.181,290,1.852,306,2.661,307,3.59,316,3.017,319,2.181,344,1.719,377,1.852,397,2.394,398,3.656,402,2.661,403,3.656,404,2.661,464,2.181,486,2.181,493,2.394,494,2.181,495,2.394,496,2.394,497,2.394,498,2.394,499,3.23,500,2.394,501,2.394,502,2.394,503,2.004,504,2.394,505,2.394,506,3.331,507,2.394,600,2.661,618,3.017,826,2.661,854,3.017,855,4.609,856,3.017,874,1.719,963,3.559,964,4.803,965,3.559,966,3.559,967,3.559,968,3.559,969,3.559,970,3.559,971,3.559,972,3.559,973,3.559,974,3.559,975,3.559,976,3.559,977,3.559,978,3.559,979,3.559,980,3.559,981,3.559,982,4.803,983,3.559,984,3.559]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":589,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.8.26",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":850,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":849,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":680,"title":{},"body":{"components/NotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.9",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":847,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["123",{"_index":648,"title":{},"body":{"classes/MockAuthenticationService.html":{}}}],["123456",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["16",{"_index":846,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":679,"title":{},"body":{"components/NotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.5.4",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":848,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["2017",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{}}}],["2018",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{}}}],["22",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/4",{"_index":836,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4.1.1",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":686,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["5",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["5/8",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":925,"title":{},"body":{"index.html":{}}}],["62",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":960,"title":{},"body":{"overview.html":{}}}],["7/10",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["_credenti",{"_index":119,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["_locat",{"_index":667,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["accessor",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/HeaderComponent.html":{}}}],["activatedroutesnapshot",{"_index":74,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"classes/RouteReusableStrategy.html":{}}}],["actual_compon",{"_index":357,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["ad",{"_index":485,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["add",{"_index":308,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/enumerations.html":{}}}],["addinterceptor",{"_index":536,"title":{},"body":{"injectables/HttpService.html":{}}}],["addinterceptor(interceptor",{"_index":530,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["addit",{"_index":569,"title":{},"body":{"classes/Logger.html":{}}}],["address",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["alert",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":962,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":486,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{},"miscellaneous/variables.html":{}}}],["alway",{"_index":504,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["angri",{"_index":709,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["angular",{"_index":923,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":201,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":32,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["angular/common/http/src/cli",{"_index":483,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["angular/common/http/src/interceptor",{"_index":487,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["angular/compil",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":674,"title":{},"body":{"components/NotFoundComponent.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":52,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["angular2",{"_index":279,"title":{},"body":{"modules/CoreModule.html":{}}}],["api",{"_index":218,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["apiprefixinterceptor",{"_index":1,"title":{"interceptors/ApiPrefixInterceptor.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":331,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"index.html":{}}}],["app/core/logger.servic",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appcompon",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["applic",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["applicationref",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appref",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appref.components.map(c",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":46,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules.html":{}}}],["artifact",{"_index":939,"title":{},"body":{"index.html":{}}}],["attempt",{"_index":96,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["augment",{"_index":484,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["auth",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["authent",{"_index":104,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/Route.html":{}}}],["authentication.servic",{"_index":85,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"classes/MockAuthenticationService.html":{}}}],["authentication/authentication.guard",{"_index":289,"title":{},"body":{"modules/CoreModule.html":{},"classes/Route.html":{}}}],["authentication/authentication.servic",{"_index":288,"title":{},"body":{"modules/CoreModule.html":{},"components/HeaderComponent.html":{}}}],["authenticationguard",{"_index":64,"title":{"injectables/AuthenticationGuard.html":{}},"body":{"injectables/AuthenticationGuard.html":{},"modules/CoreModule.html":{},"classes/Route.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationservic",{"_index":71,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"overview.html":{}}}],["automat",{"_index":933,"title":{},"body":{"index.html":{}}}],["avail",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avoid",{"_index":250,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["back",{"_index":705,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["bare",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":110,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/Route.html":{}}}],["behavior",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["below",{"_index":501,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["bet",{"_index":202,"title":{},"body":{"modules/BetCenterModule.html":{}}}],["betcentermodul",{"_index":183,"title":{"modules/BetCenterModule.html":{}},"body":{"modules/BetCenterModule.html":{},"modules.html":{},"overview.html":{}}}],["betcenterroutingmodul",{"_index":192,"title":{"modules/BetCenterRoutingModule.html":{}},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["betfriendscent",{"_index":920,"title":{},"body":{"index.html":{}}}],["better",{"_index":499,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["between",{"_index":745,"title":{},"body":{"classes/Route.html":{}}}],["boolean",{"_index":79,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"components/HomeComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"classes/RouteReusableStrategy.html":{}}}],["bootstrap",{"_index":187,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrap().then(mod",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":956,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":675,"title":{},"body":{"components/NotFoundComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["build",{"_index":938,"title":{},"body":{"index.html":{}}}],["c.location.nativeel",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cach",{"_index":213,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["cache(forceupd",{"_index":467,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["cache.interceptor",{"_index":474,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["cache.servic",{"_index":239,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{}}}],["cache.service.t",{"_index":398,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache.service.ts:101",{"_index":462,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:107",{"_index":460,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:113",{"_index":459,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:21",{"_index":463,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:22",{"_index":454,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:34",{"_index":461,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:48",{"_index":457,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:64",{"_index":458,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:72",{"_index":456,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cache.service.ts:82",{"_index":455,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cacheddata",{"_index":245,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["cacheentri",{"_index":418,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["cacheentry.data",{"_index":420,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["cacheinterceptor",{"_index":211,"title":{"interceptors/CacheInterceptor.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"overview.html":{}}}],["cacheinterceptor(this.httpcacheservic",{"_index":240,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["cachepersistencekey",{"_index":403,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":165,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["canactiv",{"_index":66,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"classes/Route.html":{}}}],["canactivate(next",{"_index":73,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["catcherror",{"_index":314,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["center",{"_index":203,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{}}}],["center.module.t",{"_index":199,"title":{},"body":{"modules/BetCenterModule.html":{}}}],["center/bet",{"_index":198,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{}}}],["center/home/home.component.t",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["center/home/home.component.ts:10",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["center/home/home.component.ts:11",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["center/home/home.component.ts:15",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["chain",{"_index":488,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["chang",{"_index":434,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"index.html":{}}}],["check",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"index.html":{}}}],["checklogin",{"_index":67,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["checklogin(url",{"_index":80,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["child",{"_index":746,"title":{},"body":{"classes/Route.html":{}}}],["children",{"_index":743,"title":{},"body":{"classes/Route.html":{}}}],["class",{"_index":37,"title":{"classes/HttpInterceptorHandler.html":{},"classes/Logger.html":{},"classes/MockAuthenticationService.html":{},"classes/Notification.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["clean",{"_index":424,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["cleancach",{"_index":448,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["cleancache(expirationd",{"_index":428,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["clear",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["clearcach",{"_index":449,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["clearcache(url",{"_index":422,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["cli",{"_index":924,"title":{},"body":{"index.html":{}}}],["cluster_betcentermodul",{"_index":188,"title":{},"body":{"modules/BetCenterModule.html":{},"overview.html":{}}}],["cluster_betcentermodule_declar",{"_index":189,"title":{},"body":{"modules/BetCenterModule.html":{},"overview.html":{}}}],["cluster_betcentermodule_import",{"_index":190,"title":{},"body":{"modules/BetCenterModule.html":{},"overview.html":{}}}],["cluster_coremodul",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_declar",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_provid",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":777,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":778,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":779,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usermodul",{"_index":812,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declar",{"_index":813,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_import",{"_index":814,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":935,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":200,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{}}}],["complet",{"_index":566,"title":{},"body":{"classes/Logger.html":{}}}],["compon",{"_index":57,"title":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/Route.html":{},"components/ShellComponent.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":347,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["configur",{"_index":219,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["configure(opt",{"_index":225,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["consol",{"_index":911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.log",{"_index":573,"title":{},"body":{"classes/Logger.html":{}}}],["const",{"_index":55,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NotFoundComponent.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":68,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["constructor(_loc",{"_index":663,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["constructor(httpcacheservic",{"_index":222,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["constructor(httphandl",{"_index":538,"title":{},"body":{"injectables/HttpService.html":{}}}],["constructor(next",{"_index":533,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["constructor(priv",{"_index":89,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{}}}],["constructor(rout",{"_index":69,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(sourc",{"_index":561,"title":{},"body":{"classes/Logger.html":{}}}],["constructor(valu",{"_index":715,"title":{},"body":{"classes/Notification.html":{},"classes/User.html":{}}}],["content",{"_index":342,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{}}}],["context",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["context.rememb",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["context.usernam",{"_index":167,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["copi",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{}}}],["core",{"_index":54,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"components/LoginComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["coremodul",{"_index":193,"title":{"modules/CoreModule.html":{}},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["correspond",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["coverag",{"_index":820,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":248,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"classes/Route.html":{}}}],["createform",{"_index":604,"title":{},"body":{"components/LoginComponent.html":{}}}],["createnewhosts(el",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credenti",{"_index":112,"title":{"interfaces/Credentials.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentials.usernam",{"_index":373,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["credentialskey",{"_index":158,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["critic",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["curr",{"_index":768,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["curr.routeconfig",{"_index":775,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["current",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"classes/Logger.html":{},"interfaces/LoginContext.html":{}}}],["custom",{"_index":152,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/LoginContext.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":166,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/BetCenterRoutingModule.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/UserRoutingModule.html":{}}}],["date",{"_index":400,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["debug",{"_index":558,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["debug(...object",{"_index":570,"title":{},"body":{"classes/Logger.html":{}}}],["declar",{"_index":186,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["default",{"_index":235,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"classes/MockAuthenticationService.html":{},"injectables/NotificationService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":18,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"components/ShellComponent.html":{},"classes/User.html":{}}}],["definit",{"_index":754,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["delet",{"_index":423,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["depend",{"_index":184,"title":{"dependencies.html":{}},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"injectables/HttpService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{}}}],["detachedroutehandl",{"_index":762,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["detachedtre",{"_index":772,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["dev",{"_index":931,"title":{},"body":{"index.html":{}}}],["develop",{"_index":926,"title":{},"body":{"index.html":{}}}],["differ",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["direct",{"_index":345,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":937,"title":{},"body":{"index.html":{}}}],["directli",{"_index":500,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["directori",{"_index":941,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":377,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["disableapiprefix",{"_index":465,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["display",{"_index":799,"title":{},"body":{"classes/User.html":{}}}],["displayfullnam",{"_index":791,"title":{},"body":{"classes/User.html":{}}}],["dist",{"_index":940,"title":{},"body":{"index.html":{}}}],["document",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["document.createelement('link",{"_index":683,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["document.getelementbyid('font",{"_index":694,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["document.getelementsbytagname('head')[0",{"_index":682,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["dom",{"_index":325,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["dynam",{"_index":494,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["e2",{"_index":949,"title":{},"body":{"index.html":{}}}],["each",{"_index":220,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["each(this.cacheddata",{"_index":429,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["eaten",{"_index":711,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["effect",{"_index":252,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["element",{"_index":344,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["enabl",{"_index":229,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["enableproductionmod",{"_index":559,"title":{},"body":{"classes/Logger.html":{}}}],["end",{"_index":948,"title":{},"body":{"index.html":{}}}],["entri",{"_index":232,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["enum",{"_index":588,"title":{},"body":{"classes/Logger.html":{}}}],["enumer",{"_index":875,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":34,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["environment.product",{"_index":320,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["environment.serverurl",{"_index":10,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["environments/environ",{"_index":35,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["error",{"_index":261,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["error(...object",{"_index":578,"title":{},"body":{"classes/Logger.html":{}}}],["errorhandl",{"_index":310,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandler(respons",{"_index":311,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["errorhandlerinterceptor",{"_index":269,"title":{"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"overview.html":{}}}],["event",{"_index":257,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["exampl",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["except",{"_index":496,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["execut",{"_index":945,"title":{},"body":{"index.html":{}}}],["exist",{"_index":416,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["expir",{"_index":427,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["expirationd",{"_index":426,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["explicit",{"_index":750,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["export",{"_index":36,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["extend",{"_index":476,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/RouteReusableStrategy.html":{}}}],["extendedhttpcli",{"_index":216,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["extens",{"_index":495,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":102,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["facil",{"_index":405,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["fallback",{"_index":58,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fals",{"_index":107,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"interceptors/CacheInterceptor.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/RouteReusableStrategy.html":{}}}],["fat",{"_index":697,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["final",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{}}}],["firstnam",{"_index":787,"title":{},"body":{"classes/User.html":{}}}],["fix",{"_index":374,"title":{},"body":{"components/HeaderComponent.html":{}}}],["flag",{"_index":943,"title":{},"body":{"index.html":{}}}],["fluent",{"_index":217,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["font",{"_index":685,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["fonts.googleapis.com/css?family=open+san",{"_index":692,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["footer",{"_index":332,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'nam",{"_index":348,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["footer.component.html",{"_index":336,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":334,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercompon",{"_index":266,"title":{"components/FooterComponent.html":{}},"body":{"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forc",{"_index":230,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["forceupd",{"_index":221,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["formbuild",{"_index":605,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["fortawesome/fontawesom",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["found",{"_index":656,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'nam",{"_index":355,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["found.compon",{"_index":300,"title":{},"body":{"modules/CoreModule.html":{}}}],["found.component.html",{"_index":658,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":657,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.t",{"_index":654,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":672,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:13",{"_index":666,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:24",{"_index":670,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:33",{"_index":669,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:38",{"_index":668,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":299,"title":{},"body":{"modules/CoreModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":62,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"classes/User.html":{}}}],["func",{"_index":585,"title":{},"body":{"classes/Logger.html":{}}}],["function",{"_index":526,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":951,"title":{},"body":{"index.html":{}}}],["futur",{"_index":770,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.data.reus",{"_index":776,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["future.routeconfig",{"_index":774,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["gener",{"_index":922,"title":{},"body":{"index.html":{}}}],["get",{"_index":151,"title":{"index.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["getcachedata",{"_index":450,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["getcachedata(url",{"_index":417,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["getcredenti",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["gethttpcacheentri",{"_index":451,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["gethttpcacheentry(url",{"_index":421,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["getusernam",{"_index":368,"title":{},"body":{"components/HeaderComponent.html":{}}}],["given",{"_index":753,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["go",{"_index":704,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["goback",{"_index":661,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["gone",{"_index":708,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["graph",{"_index":955,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":282,"title":{},"body":{"modules/CoreModule.html":{}}}],["guard.t",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handl",{"_index":532,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["handle(request",{"_index":490,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["handler",{"_index":309,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"miscellaneous/typealiases.html":{}}}],["handler.interceptor",{"_index":296,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["handler.interceptor.t",{"_index":307,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["handler.interceptor.ts:17",{"_index":313,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["handler.interceptor.ts:22",{"_index":312,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["happened');to",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["head",{"_index":659,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["header",{"_index":359,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'nam",{"_index":349,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["header.component.html",{"_index":361,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":360,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":267,"title":{"components/HeaderComponent.html":{}},"body":{"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hello",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["help",{"_index":952,"title":{},"body":{"index.html":{}}}],["helper",{"_index":738,"title":{},"body":{"classes/Route.html":{}}}],["here",{"_index":154,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{}}}],["hey",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{}}}],["hi",{"_index":378,"title":{},"body":{"components/HeaderComponent.html":{}}}],["hit",{"_index":419,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["hmrbootstrap",{"_index":855,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":208,"title":{},"body":{"modules/BetCenterRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["home'},{'nam",{"_index":350,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["home.component.html",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.compon",{"_index":205,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{}}}],["homecompon",{"_index":191,"title":{"components/HomeComponent.html":{}},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":343,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["htmlelement",{"_index":671,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["http",{"_index":214,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["http/api",{"_index":293,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/cache.interceptor",{"_index":297,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/error",{"_index":295,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/http",{"_index":292,"title":{},"body":{"modules/CoreModule.html":{}}}],["http/http.servic",{"_index":291,"title":{},"body":{"modules/CoreModule.html":{}}}],["http://localhost:4200",{"_index":932,"title":{},"body":{"index.html":{}}}],["http_dynamic_interceptor",{"_index":506,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http_interceptor",{"_index":273,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["httpcach",{"_index":404,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"miscellaneous/variables.html":{}}}],["httpcacheentri",{"_index":396,"title":{"interfaces/HttpCacheEntry.html":{}},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{}}}],["httpcacheservic",{"_index":223,"title":{"injectables/HttpCacheService.html":{}},"body":{"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"overview.html":{}}}],["httpclient",{"_index":274,"title":{"interfaces/HttpClient.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["httpclient(handler).request(method",{"_index":524,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpclientmodul",{"_index":275,"title":{},"body":{"modules/CoreModule.html":{}}}],["httpevent",{"_index":30,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httphandler",{"_index":17,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpinterceptor",{"_index":31,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpinterceptorhandl",{"_index":489,"title":{"classes/HttpInterceptorHandler.html":{}},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{}}}],["httpinterceptorhandler(next",{"_index":522,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httprequest",{"_index":15,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httprespons",{"_index":237,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["httpresponse(cacheddata",{"_index":254,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["https://github.com/angular/angular/issues/18374",{"_index":752,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["https://github.com/microsoft/typescript/issues/13897",{"_index":482,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["httpservic",{"_index":290,"title":{"injectables/HttpService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":788,"title":{},"body":{"classes/User.html":{}}}],["identifi",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["imagenumb",{"_index":660,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["implement",{"_index":38,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["import",{"_index":27,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["incorrect",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/enumerations.html":{}}}],["info(...object",{"_index":580,"title":{},"body":{"classes/Logger.html":{}}}],["inform",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inject",{"_index":28,"title":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"injectables/HttpCacheService.html":{},"injectables/HttpService.html":{},"injectables/NotificationService.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["inject(http_dynamic_interceptor",{"_index":509,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["injectiontoken",{"_index":472,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["injectiontoken('http_dynamic_interceptor",{"_index":507,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":473,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["input",{"_index":550,"title":{},"body":{"components/LoaderComponent.html":{}}}],["instanc",{"_index":233,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Route.html":{}}}],["instance.forceupd",{"_index":242,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["instanceof",{"_index":258,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["instead",{"_index":702,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["intercept",{"_index":13,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["intercept(request",{"_index":14,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["interceptor",{"_index":0,"title":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["interceptortyp",{"_index":529,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["interfac",{"_index":113,"title":{"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"interfaces/HttpClient.html":{},"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["isauthent",{"_index":121,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["isload",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{}}}],["it'",{"_index":707,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["it\\'",{"_index":713,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["js",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["json.parse(data",{"_index":447,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["json.parse(savedcredenti",{"_index":163,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(credenti",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["json.stringify(preobject",{"_index":810,"title":{},"body":{"classes/User.html":{}}}],["json.stringify(this.cacheddata",{"_index":445,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["karma",{"_index":947,"title":{},"body":{"index.html":{}}}],["key",{"_index":407,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["last",{"_index":411,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["lastnam",{"_index":789,"title":{},"body":{"classes/User.html":{}}}],["lastupd",{"_index":399,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["legend",{"_index":185,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["level",{"_index":556,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["level].concat(object",{"_index":599,"title":{},"body":{"classes/Logger.html":{}}}],["link",{"_index":376,"title":{},"body":{"components/HeaderComponent.html":{},"components/NotFoundComponent.html":{}}}],["link.href",{"_index":691,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["link.id",{"_index":684,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["link.rel",{"_index":689,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["link.typ",{"_index":687,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["liter",{"_index":226,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{}}}],["loadcachedata",{"_index":446,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["loader",{"_index":547,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":352,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["loader.component.html",{"_index":549,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":548,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.compon",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["loadercompon",{"_index":351,"title":{"components/LoaderComponent.html":{}},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["local",{"_index":437,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["local'|'sess",{"_index":436,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["localstorag",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/User.html":{}}}],["localstorage.getitem(credentialskey",{"_index":161,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["localstorage.removeitem(credentialskey",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["locat",{"_index":664,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["lodash",{"_index":401,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["log",{"_index":86,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["log(func",{"_index":582,"title":{},"body":{"classes/Logger.html":{}}}],["log.debug('not",{"_index":103,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["log.debug('someth",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log.debug(`${credentials.usernam",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["log.debug(`cach",{"_index":414,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["log.debug(`login",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["log.error('request",{"_index":322,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["logger",{"_index":83,"title":{"classes/Logger.html":{}},"body":{"injectables/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["logger('authenticationguard",{"_index":88,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["logger('errorhandlerinterceptor",{"_index":316,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"miscellaneous/variables.html":{}}}],["logger('httpcacheservic",{"_index":402,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"miscellaneous/variables.html":{}}}],["logger('login",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["logger('myfil",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.enableproductionmod",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.level",{"_index":590,"title":{},"body":{"classes/Logger.html":{}}}],["logger.output",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logger.servic",{"_index":84,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["login",{"_index":100,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"modules/UserRoutingModule.html":{}}}],["login'},{'nam",{"_index":354,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["login(context",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["login.component.html",{"_index":602,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":601,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.compon",{"_index":818,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["login/logout",{"_index":115,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["logincompon",{"_index":353,"title":{"components/LoginComponent.html":{}},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["logincontext",{"_index":129,"title":{"interfaces/LoginContext.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"coverage.html":{}}}],["loginform",{"_index":603,"title":{},"body":{"components/LoginComponent.html":{}}}],["loglevel",{"_index":583,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.debug",{"_index":563,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.error",{"_index":596,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.info",{"_index":593,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.off",{"_index":565,"title":{},"body":{"classes/Logger.html":{}}}],["loglevel.warn",{"_index":577,"title":{},"body":{"classes/Logger.html":{}}}],["logout",{"_index":122,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["logoutput",{"_index":567,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["look",{"_index":712,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["made",{"_index":231,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["make",{"_index":478,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["makevis",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":44,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":678,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["memberof",{"_index":735,"title":{},"body":{"injectables/NotificationService.html":{},"classes/User.html":{}}}],["memori",{"_index":438,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["menu",{"_index":703,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["menuhidden",{"_index":362,"title":{},"body":{"components/HeaderComponent.html":{}}}],["messag",{"_index":551,"title":{},"body":{"components/LoaderComponent.html":{},"classes/Logger.html":{}}}],["metadata",{"_index":329,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["method",{"_index":12,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":874,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mockauthenticationservic",{"_index":646,"title":{"classes/MockAuthenticationService.html":{}},"body":{"classes/MockAuthenticationService.html":{},"coverage.html":{}}}],["mod",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":576,"title":{},"body":{"classes/Logger.html":{}}}],["model",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{},"injectables/NotificationService.html":{}}}],["modul",{"_index":45,"title":{"modules/AppRoutingModule.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["module.hot.accept",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module.hot.dispos",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenam",{"_index":917,"title":{},"body":{"miscellaneous/functions.html":{}}}],["more",{"_index":953,"title":{},"body":{"index.html":{}}}],["mostli",{"_index":802,"title":{},"body":{"classes/User.html":{}}}],["name",{"_index":22,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navbar",{"_index":375,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navig",{"_index":99,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"classes/Route.html":{},"index.html":{}}}],["need",{"_index":319,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["new",{"_index":87,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":16,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["next.handle(request",{"_index":42,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{}}}],["next.handle(request).pipe(catcherror(error",{"_index":317,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["ng",{"_index":929,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":49,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["ngmodule.destroy",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodule.injector.get(applicationref",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmoduleref",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngondestroy",{"_index":662,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["ngoninit",{"_index":337,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["ngrout",{"_index":742,"title":{},"body":{"classes/Route.html":{}}}],["non",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["normal",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":433,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["notfoundcompon",{"_index":53,"title":{"components/NotFoundComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notif",{"_index":280,"title":{"classes/Notification.html":{}},"body":{"modules/CoreModule.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"coverage.html":{}}}],["notifc",{"_index":729,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notification.servic",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{}}}],["notificationservic",{"_index":270,"title":{"injectables/NotificationService.html":{}},"body":{"modules/CoreModule.html":{},"components/LoginComponent.html":{},"injectables/NotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsourc",{"_index":722,"title":{},"body":{"injectables/NotificationService.html":{}}}],["notificationtyp",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{},"classes/Notification.html":{},"miscellaneous/enumerations.html":{}}}],["notificationtype.success",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["now",{"_index":699,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["null",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"classes/RouteReusableStrategy.html":{}}}],["number",{"_index":673,"title":{},"body":{"components/NotFoundComponent.html":{},"classes/User.html":{}}}],["object",{"_index":255,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"classes/Logger.html":{},"classes/Notification.html":{},"classes/User.html":{}}}],["object.assign(thi",{"_index":720,"title":{},"body":{"classes/Notification.html":{},"classes/User.html":{}}}],["observ",{"_index":26,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["observable((subscrib",{"_index":244,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["of(data",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["of(tru",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["oh",{"_index":706,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["older",{"_index":425,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["on",{"_index":701,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["ondestroy",{"_index":655,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["oninit",{"_index":328,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["option",{"_index":24,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["options.upd",{"_index":241,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["origin",{"_index":477,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["otherwis",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["out",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":557,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["output.apply(output",{"_index":597,"title":{},"body":{"classes/Logger.html":{}}}],["overrid",{"_index":493,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["overview",{"_index":959,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":859,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":101,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/NotFoundComponent.html":{}}}],["panda",{"_index":710,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["param",{"_index":164,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{}}}],["paramet",{"_index":20,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["parentmodul",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":157,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["path",{"_index":56,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"classes/Route.html":{},"modules/UserRoutingModule.html":{}}}],["pathmatch",{"_index":61,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{}}}],["per",{"_index":508,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["persist",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["pictur",{"_index":790,"title":{},"body":{"classes/User.html":{}}}],["pipe(fin",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{}}}],["place",{"_index":340,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["platformbrowserdynamic().bootstrapmodule(appmodul",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pleas",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["polici",{"_index":406,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["possibl",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":8,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["prefix.interceptor",{"_index":294,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["prefix.interceptor.t",{"_index":6,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["prefix.interceptor.ts:13",{"_index":19,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["preobject",{"_index":806,"title":{},"body":{"classes/User.html":{}}}],["prevent",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["previou",{"_index":435,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["prior",{"_index":59,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":90,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{}}}],["process",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prod",{"_index":942,"title":{},"body":{"index.html":{}}}],["product",{"_index":575,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["profil",{"_index":379,"title":{},"body":{"components/HeaderComponent.html":{}}}],["project",{"_index":921,"title":{},"body":{"index.html":{}}}],["promis",{"_index":78,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["proper",{"_index":117,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["properli",{"_index":480,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["properti",{"_index":118,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/User.html":{}}}],["protractor",{"_index":950,"title":{},"body":{"index.html":{}}}],["provid",{"_index":109,"title":{},"body":{"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{},"classes/Route.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["providedin",{"_index":734,"title":{},"body":{"injectables/NotificationService.html":{}}}],["public",{"_index":755,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"classes/User.html":{}}}],["purpos",{"_index":803,"title":{},"body":{"classes/User.html":{}}}],["quot",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["re",{"_index":475,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["reach",{"_index":698,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["reactiveformsmodul",{"_index":817,"title":{},"body":{"modules/UserModule.html":{}}}],["readabl",{"_index":502,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["readm",{"_index":954,"title":{},"body":{"index.html":{}}}],["receiv",{"_index":153,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["redirect",{"_index":97,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/LoginComponent.html":{}}}],["redirectto",{"_index":60,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{}}}],["redirecturl",{"_index":120,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["regist",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reload",{"_index":934,"title":{},"body":{"index.html":{}}}],["rememb",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["removeinterceptor",{"_index":537,"title":{},"body":{"injectables/HttpService.html":{}}}],["removeinterceptor(interceptortyp",{"_index":525,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["replac",{"_index":116,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{}}}],["replaceurl",{"_index":106,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["request",{"_index":9,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["request(method",{"_index":520,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["request.clon",{"_index":39,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["request.method",{"_index":243,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["request.url",{"_index":41,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["requir",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{}}}],["reset",{"_index":196,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respons",{"_index":249,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interceptors/ErrorHandlerInterceptor.html":{}}}],["responseopt",{"_index":410,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["result",{"_index":43,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":756,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["retrieve(rout",{"_index":760,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["return",{"_index":25,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{}}}],["reus",{"_index":744,"title":{},"body":{"classes/Route.html":{},"classes/RouteReusableStrategy.html":{}}}],["reusabl",{"_index":286,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["root",{"_index":727,"title":{},"body":{"injectables/NotificationService.html":{},"miscellaneous/enumerations.html":{}}}],["rout",{"_index":50,"title":{"classes/Route.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["route.withshel",{"_index":207,"title":{},"body":{"modules/BetCenterRoutingModule.html":{}}}],["router",{"_index":70,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["routereusablestrategi",{"_index":285,"title":{"classes/RouteReusableStrategy.html":{}},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["routereusestrategi",{"_index":276,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["routermodul",{"_index":51,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/CoreModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forchild(rout",{"_index":210,"title":{},"body":{"modules/BetCenterRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":63,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":76,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["routing.modul",{"_index":204,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/UserModule.html":{}}}],["routing.module.t",{"_index":48,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BetCenterRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["run",{"_index":928,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":33,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"injectables/NotificationService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":315,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"components/LoginComponent.html":{}}}],["same",{"_index":572,"title":{},"body":{"classes/Logger.html":{}}}],["savecachedata",{"_index":443,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["savedcredenti",{"_index":159,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["scaffold",{"_index":936,"title":{},"body":{"index.html":{}}}],["see",{"_index":481,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/enumerations.html":{}}}],["selector",{"_index":330,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["serv",{"_index":930,"title":{},"body":{"index.html":{}}}],["server",{"_index":927,"title":{},"body":{"index.html":{}}}],["servic",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["session",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["sessionstorag",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["sessionstorage.getitem(credentialskey",{"_index":160,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["sessionstorage.removeitem(credentialskey",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["set",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"miscellaneous/enumerations.html":{}}}],["setcachedata",{"_index":452,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["setcachedata(url",{"_index":412,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["setcredenti",{"_index":123,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setcredentials(credenti",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["setpersist",{"_index":453,"title":{},"body":{"injectables/HttpCacheService.html":{}}}],["setpersistence(persist",{"_index":439,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["settimeout",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["share",{"_index":206,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/UserModule.html":{}}}],["sharedmodul",{"_index":194,"title":{"modules/SharedModule.html":{}},"body":{"modules/BetCenterModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["shell",{"_index":356,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/Route.html":{},"components/ShellComponent.html":{}}}],["shell.component.html",{"_index":784,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell.component.scss",{"_index":783,"title":{},"body":{"components/ShellComponent.html":{}}}],["shell/footer/footer.compon",{"_index":301,"title":{},"body":{"modules/CoreModule.html":{}}}],["shell/header/header.compon",{"_index":284,"title":{},"body":{"modules/CoreModule.html":{}}}],["shell/shell.compon",{"_index":283,"title":{},"body":{"modules/CoreModule.html":{},"classes/Route.html":{}}}],["shellcompon",{"_index":268,"title":{"components/ShellComponent.html":{}},"body":{"modules/CoreModule.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/Route.html":{},"components/ShellComponent.html":{},"coverage.html":{},"overview.html":{}}}],["shouldattach",{"_index":757,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldattach(rout",{"_index":763,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach",{"_index":758,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shoulddetach(rout",{"_index":765,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuserout",{"_index":759,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["shouldreuseroute(futur",{"_index":767,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["show",{"_index":728,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotif",{"_index":723,"title":{},"body":{"injectables/NotificationService.html":{}}}],["shownotification(notif",{"_index":724,"title":{},"body":{"injectables/NotificationService.html":{}}}],["side",{"_index":251,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["sign",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["simpl",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["simplenotificationscompon",{"_index":278,"title":{},"body":{"modules/CoreModule.html":{}}}],["simplenotificationsmodul",{"_index":277,"title":{},"body":{"modules/CoreModule.html":{}}}],["simplenotificationsmodule.forroot",{"_index":302,"title":{},"body":{"modules/CoreModule.html":{}}}],["skip",{"_index":471,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["skiperrorhandl",{"_index":466,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["skipself",{"_index":272,"title":{},"body":{"modules/CoreModule.html":{}}}],["snippet",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["someth",{"_index":321,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"interceptors/CacheInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"modules/SharedModule.html":{},"components/ShellComponent.html":{},"classes/User.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"index.html":{}}}],["specif",{"_index":498,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["specifi",{"_index":409,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["src/.../authentication.guard.t",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.t",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hmr.t",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.service.t",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../level.enum.t",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.service.t",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../login.component.t",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.t",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../modul",{"_index":916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notif",{"_index":878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":47,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/bet",{"_index":197,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/BetCenterRoutingModule.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.guard.t",{"_index":65,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.guard.ts:11",{"_index":72,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:15",{"_index":77,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.guard.ts:21",{"_index":82,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["src/app/core/authentication/authentication.service.mock.t",{"_index":647,"title":{},"body":{"classes/MockAuthenticationService.html":{},"coverage.html":{}}}],["src/app/core/authentication/authentication.service.mock.ts:12",{"_index":651,"title":{},"body":{"classes/MockAuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.mock.ts:19",{"_index":652,"title":{},"body":{"classes/MockAuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.mock.ts:24",{"_index":650,"title":{},"body":{"classes/MockAuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.mock.ts:7",{"_index":649,"title":{},"body":{"classes/MockAuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.t",{"_index":108,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/authentication/authentication.service.ts:25",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:26",{"_index":124,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:40",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:54",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:64",{"_index":125,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:72",{"_index":150,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/authentication/authentication.service.ts:83",{"_index":138,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/core/core.module.t",{"_index":271,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/http/api",{"_index":5,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{}}}],["src/app/core/http/cache.interceptor.t",{"_index":212,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["src/app/core/http/cache.interceptor.ts:14",{"_index":224,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["src/app/core/http/cache.interceptor.ts:23",{"_index":227,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["src/app/core/http/cache.interceptor.ts:31",{"_index":234,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["src/app/core/http/error",{"_index":306,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/http",{"_index":397,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/http.service.t",{"_index":464,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/http/http.service.ts:103",{"_index":543,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:111",{"_index":540,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:22",{"_index":468,"title":{},"body":{"interfaces/HttpClient.html":{}}}],["src/app/core/http/http.service.ts:28",{"_index":470,"title":{},"body":{"interfaces/HttpClient.html":{}}}],["src/app/core/http/http.service.ts:34",{"_index":469,"title":{},"body":{"interfaces/HttpClient.html":{}}}],["src/app/core/http/http.service.ts:41",{"_index":534,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["src/app/core/http/http.service.ts:45",{"_index":535,"title":{},"body":{"classes/HttpInterceptorHandler.html":{}}}],["src/app/core/http/http.service.ts:65",{"_index":539,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:81",{"_index":541,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:86",{"_index":545,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:90",{"_index":542,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/http/http.service.ts:95",{"_index":544,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/core/logger.service.t",{"_index":555,"title":{},"body":{"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/logger.service.ts:101",{"_index":579,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:105",{"_index":584,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:56",{"_index":564,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:61",{"_index":568,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:67",{"_index":574,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:69",{"_index":562,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:77",{"_index":571,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:85",{"_index":581,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/logger.service.ts:93",{"_index":587,"title":{},"body":{"classes/Logger.html":{}}}],["src/app/core/modul",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/not",{"_index":653,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/core/notification.service.t",{"_index":721,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/app/core/notification.service.ts:10",{"_index":733,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/notification.service.ts:11",{"_index":731,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/notification.service.ts:20",{"_index":725,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/app/core/rout",{"_index":748,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["src/app/core/route.service.t",{"_index":737,"title":{},"body":{"classes/Route.html":{},"coverage.html":{}}}],["src/app/core/route.service.ts:16",{"_index":741,"title":{},"body":{"classes/Route.html":{}}}],["src/app/core/shell/footer/footer.component.t",{"_index":327,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/core/shell/footer/footer.component.ts:12",{"_index":339,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/shell/footer/footer.component.ts:8",{"_index":338,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/core/shell/header/header.component.t",{"_index":358,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/core/shell/header/header.component.ts:13",{"_index":364,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/shell/header/header.component.ts:20",{"_index":366,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/shell/header/header.component.ts:22",{"_index":367,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/shell/header/header.component.ts:26",{"_index":365,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/shell/header/header.component.ts:31",{"_index":369,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/core/shell/shell.component.t",{"_index":782,"title":{},"body":{"components/ShellComponent.html":{},"coverage.html":{}}}],["src/app/core/shell/shell.component.ts:8",{"_index":785,"title":{},"body":{"components/ShellComponent.html":{}}}],["src/app/models/level.enum.t",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/notif",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/notification.model.t",{"_index":714,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["src/app/models/notification.model.ts:4",{"_index":718,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notification.model.ts:5",{"_index":717,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/notification.model.ts:6",{"_index":716,"title":{},"body":{"classes/Notification.html":{}}}],["src/app/models/user.model.t",{"_index":786,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.model.ts:19",{"_index":798,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:2",{"_index":795,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:3",{"_index":794,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:30",{"_index":800,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:4",{"_index":796,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:5",{"_index":797,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.model.ts:6",{"_index":793,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/loader/loader.component.t",{"_index":546,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/loader/loader.component.ts:10",{"_index":553,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/loader/loader.component.ts:11",{"_index":552,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/loader/loader.component.ts:15",{"_index":554,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/shared/shared.module.t",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/user/login/login.component.t",{"_index":600,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/user/login/login.component.ts:18",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:19",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:20",{"_index":606,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:31",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:33",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/login/login.component.ts:60",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/user/us",{"_index":819,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/user/user.module.t",{"_index":816,"title":{},"body":{"modules/UserModule.html":{}}}],["src/hmr.t",{"_index":854,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.t",{"_index":856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":505,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":919,"title":{"index.html":{}},"body":{}}],["state",{"_index":75,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["state.url",{"_index":91,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["statement",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":503,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{},"classes/Route.html":{},"miscellaneous/variables.html":{}}}],["statu",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sticki",{"_index":341,"title":{},"body":{"components/FooterComponent.html":{}}}],["storag",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/LoginContext.html":{}}}],["storage.setitem(credentialskey",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["store",{"_index":95,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"classes/RouteReusableStrategy.html":{},"index.html":{}}}],["store(rout",{"_index":771,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategi",{"_index":287,"title":{},"body":{"modules/CoreModule.html":{},"classes/RouteReusableStrategy.html":{}}}],["strategy.t",{"_index":749,"title":{},"body":{"classes/RouteReusableStrategy.html":{},"coverage.html":{}}}],["strategy.ts:10",{"_index":766,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:14",{"_index":773,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:16",{"_index":764,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:20",{"_index":761,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["strategy.ts:24",{"_index":769,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["string",{"_index":81,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/Notification.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["stringifi",{"_index":792,"title":{},"body":{"classes/User.html":{}}}],["stylesheet",{"_index":690,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["styleurl",{"_index":333,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["subject",{"_index":732,"title":{},"body":{"injectables/NotificationService.html":{}}}],["subscrib",{"_index":238,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/HeaderComponent.html":{}}}],["subscribe(credenti",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscriber.complet",{"_index":256,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["subscriber.error(error",{"_index":262,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["subscriber.next(ev",{"_index":260,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["subscriber.next(new",{"_index":253,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["success",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["successfulli",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{}}}],["super(httphandl",{"_index":510,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["support",{"_index":957,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":958,"title":{},"body":{"modules.html":{}}}],["system",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":858,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["tell",{"_index":726,"title":{},"body":{"injectables/NotificationService.html":{}}}],["templat",{"_index":324,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"components/ShellComponent.html":{}}}],["templateurl",{"_index":335,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["test",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{},"classes/MockAuthenticationService.html":{},"index.html":{}}}],["text/css",{"_index":688,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this._credenti",{"_index":162,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this._location.back",{"_index":696,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.addinterceptor(cacheinterceptor",{"_index":515,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.authenticationservice.credenti",{"_index":372,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authenticationservice.isauthent",{"_index":93,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["this.authenticationservice.login(this.loginform.valu",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authenticationservice.logout",{"_index":371,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authenticationservice.redirecturl",{"_index":98,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/LoginComponent.html":{}}}],["this.cacheddata",{"_index":432,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.cacheddata[key",{"_index":431,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.cacheddata[url",{"_index":413,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.checklogin(url",{"_index":92,"title":{},"body":{"injectables/AuthenticationGuard.html":{}}}],["this.cleancach",{"_index":440,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.createform",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.credenti",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["this.email",{"_index":809,"title":{},"body":{"classes/User.html":{}}}],["this.error",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errorhandler(error",{"_index":318,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["this.firstnam",{"_index":804,"title":{},"body":{"classes/User.html":{}}}],["this.forceupd",{"_index":246,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.formbuilder.group",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.head",{"_index":681,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.head.appendchild(link",{"_index":693,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.head.removechild(link",{"_index":695,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.httpcacheservice.getcachedata(request.urlwithparam",{"_index":247,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.httpcacheservice.setcachedata(request.urlwithparam",{"_index":259,"title":{},"body":{"interceptors/CacheInterceptor.html":{}}}],["this.httphandl",{"_index":523,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.id",{"_index":807,"title":{},"body":{"classes/User.html":{}}}],["this.imagenumb",{"_index":677,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["this.injector",{"_index":527,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.injector.get(apiprefixinterceptor",{"_index":512,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.injector.get(cacheinterceptor).configur",{"_index":514,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.injector.get(errorhandlerinterceptor",{"_index":513,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptor",{"_index":511,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptor.intercept(request",{"_index":491,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.concat([interceptor",{"_index":531,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.filter(i",{"_index":528,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.interceptors.reduceright",{"_index":521,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.isload",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{},"components/LoginComponent.html":{}}}],["this.lastnam",{"_index":805,"title":{},"body":{"classes/User.html":{}}}],["this.loadcachedata",{"_index":408,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.log(console.error",{"_index":595,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.info",{"_index":592,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.log",{"_index":591,"title":{},"body":{"classes/Logger.html":{}}}],["this.log(console.warn",{"_index":594,"title":{},"body":{"classes/Logger.html":{}}}],["this.loginform",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.markaspristin",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menuhidden",{"_index":370,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.next",{"_index":492,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.notificationservice.shownotification(notif",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.notificationsource.asobserv",{"_index":730,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.notificationsource.next(notif",{"_index":736,"title":{},"body":{"injectables/NotificationService.html":{}}}],["this.pictur",{"_index":808,"title":{},"body":{"classes/User.html":{}}}],["this.quot",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.removeinterceptor(apiprefixinterceptor",{"_index":517,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.removeinterceptor(errorhandlerinterceptor",{"_index":516,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["this.router.navig",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":105,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"components/HeaderComponent.html":{}}}],["this.router.navigate([redirect",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.savecachedata",{"_index":415,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.setcredenti",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.setcredentials(data",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["this.sourc",{"_index":598,"title":{},"body":{"classes/Logger.html":{}}}],["this.storag",{"_index":441,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.storage[cachepersistencekey",{"_index":444,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["this.titleservice.settitle('404",{"_index":676,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["through",{"_index":910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["throw",{"_index":323,"title":{},"body":{"interceptors/ErrorHandlerInterceptor.html":{}}}],["throwifalreadyload",{"_index":281,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwifalreadyloaded(parentmodul",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/functions.html":{}}}],["titl",{"_index":209,"title":{},"body":{"modules/BetCenterRoutingModule.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"modules/UserRoutingModule.html":{}}}],["titleservic",{"_index":665,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["togglemenu",{"_index":363,"title":{},"body":{"components/HeaderComponent.html":{}}}],["token",{"_index":156,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":326,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["tri",{"_index":700,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["trigger",{"_index":519,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["true",{"_index":94,"title":{},"body":{"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{}}}],["type",{"_index":23,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"interfaces/Credentials.html":{},"interceptors/ErrorHandlerInterceptor.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{},"components/NotFoundComponent.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":719,"title":{},"body":{"classes/Notification.html":{}}}],["type.enum.t",{"_index":879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":961,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":944,"title":{},"body":{"index.html":{}}}],["updat",{"_index":228,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["url",{"_index":40,"title":{},"body":{"interceptors/ApiPrefixInterceptor.html":{},"injectables/AuthenticationGuard.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{}}}],["us",{"_index":215,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"classes/Route.html":{},"classes/RouteReusableStrategy.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usag",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{}}}],["user",{"_index":127,"title":{"classes/User.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodul",{"_index":811,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usernam",{"_index":155,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"interfaces/LoginContext.html":{},"classes/MockAuthenticationService.html":{}}}],["userroutingmodul",{"_index":815,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["valid",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.requir",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{}}}],["valu",{"_index":236,"title":{},"body":{"interceptors/CacheInterceptor.html":{},"components/HeaderComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"classes/MockAuthenticationService.html":{},"classes/Notification.html":{},"injectables/NotificationService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.lastupd",{"_index":430,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["var",{"_index":346,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"components/ShellComponent.html":{}}}],["variabl",{"_index":826,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["veri",{"_index":497,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":801,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["via",{"_index":946,"title":{},"body":{"index.html":{}}}],["view",{"_index":747,"title":{},"body":{"classes/Route.html":{}}}],["void",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{},"components/LoaderComponent.html":{},"classes/Logger.html":{},"components/LoginComponent.html":{},"components/NotFoundComponent.html":{},"injectables/NotificationService.html":{},"classes/RouteReusableStrategy.html":{}}}],["want",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warn",{"_index":560,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...object",{"_index":586,"title":{},"body":{"classes/Logger.html":{}}}],["webfont",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["well",{"_index":114,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["window[persist",{"_index":442,"title":{},"body":{"interfaces/HttpCacheEntry.html":{},"injectables/HttpCacheService.html":{}}}],["wire",{"_index":518,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{}}}],["withshel",{"_index":739,"title":{},"body":{"classes/Route.html":{}}}],["withshell(rout",{"_index":740,"title":{},"body":{"classes/Route.html":{}}}],["work",{"_index":479,"title":{},"body":{"interfaces/HttpClient.html":{},"classes/HttpInterceptorHandler.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{}}}],["workaround",{"_index":751,"title":{},"body":{"classes/RouteReusableStrategy.html":{}}}],["workflow",{"_index":111,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/Credentials.html":{},"interfaces/LoginContext.html":{}}}],["world",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["ye",{"_index":144,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/CacheInterceptor.html":{},"injectables/HttpCacheService.html":{},"interfaces/HttpClient.html":{},"injectables/HttpService.html":{},"classes/Logger.html":{}}}],["zone.j",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":195,"title":{},"body":{"modules/BetCenterModule.html":{},"modules/CoreModule.html":{},"modules/SharedModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interceptors/ApiPrefixInterceptor.html":{"url":"interceptors/ApiPrefixInterceptor.html","title":"interceptor - ApiPrefixInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  ApiPrefixInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/api-prefix.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Prefixes all requests with environment.serverUrl.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/api-prefix.interceptor.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n\n/**\n * Prefixes all requests with `environment.serverUrl`.\n */\n@Injectable()\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    request = request.clone({ url: environment.serverUrl + request.url });\n    return next.handle(request);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './core';\n\nconst routes: Routes = [\n  // { path: '**', component: NotFoundComponent },\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationGuard.html":{"url":"injectables/AuthenticationGuard.html","title":"injectable - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.guard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                checkLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.guard.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckLogin(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router, CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Logger } from '../logger.service';\nimport { AuthenticationService } from './authentication.service';\n\nconst log = new Logger('AuthenticationGuard');\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private router: Router, private authenticationService: AuthenticationService) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | boolean {\n    const url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n\n  checkLogin(url: string): boolean {\n\n    if (this.authenticationService.isAuthenticated()) { return true; }\n\n    // Store the attempted URL for redirecting\n    this.authenticationService.redirectUrl = url;\n\n    // Navigate to the login page with extras\n    log.debug('Not authenticated, redirecting...');\n    this.router.navigate(['/login'], { replaceUrl: true });\n    return false;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a base for authentication workflow.\nThe Credentials interface as well as login/logout methods should be replaced with proper implementation.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _credentials\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                    Private\n                                setCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Checks is the user is authenticated.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    True if the user is authenticated.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Authenticates the user.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The login parameters.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    The user credentials.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Logs out the user and clear credentials.\n\n\n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    True if the user was logged out successfully.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCredentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCredentials(credentials?: Credentials, remember?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:83\n                            \n                        \n\n\n                \n                    \n                            Sets the user credentials.\nThe credentials may be persisted across sessions by setting the remember parameter to true.\nOtherwise, the credentials are only persisted for the current session.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        credentials\n                                                        \n                                                                    Credentials\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The user credentials.\n\n                                                        \n                                                \n                                                \n                                                        remember\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                True to remember credentials across sessions.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _credentials:     Credentials | null\n\n                    \n                \n                    \n                        \n                            Type :     Credentials | null\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirectUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        credentials\n                    \n                \n\n                \n                    \n                        getcredentials()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/authentication/authentication.service.ts:72\n                                \n                            \n                    \n                        \n                                Gets the user credentials.\n\n\n                                \n                                \n                                \n                                    Returns :     Credentials | null\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport interface Credentials {\n  // Customize received credentials here\n  username: string;\n  token: string;\n}\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n  remember?: boolean;\n}\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n\n  private _credentials: Credentials | null;\n  redirectUrl: string;\n\n  constructor() {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable} The user credentials.\n   */\n  login(context: LoginContext): Observable {\n    // Replace by proper authentication call\n    const data = {\n      username: context.username,\n      token: '123456'\n    };\n    this.setCredentials(data, context.remember);\n    return of(data);\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable} True if the user was logged out successfully.\n   */\n  logout(): Observable {\n    // Customize credentials invalidation here\n    this.setCredentials();\n    return of(true);\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param {Credentials=} credentials The user credentials.\n   * @param {boolean=} remember True to remember credentials across sessions.\n   */\n  private setCredentials(credentials?: Credentials, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BetCenterModule.html":{"url":"modules/BetCenterModule.html","title":"module - BetCenterModule","body":"\n                   \n\n\n\n\n  Modules\n  BetCenterModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BetCenterModule\n\n\n\ncluster_BetCenterModule_declarations\n\n\n\ncluster_BetCenterModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nBetCenterModule\n\nBetCenterModule\n\nBetCenterModule -->\n\nHomeComponent->BetCenterModule\n\n\n\n\n\nBetCenterRoutingModule\n\nBetCenterRoutingModule\n\nBetCenterModule -->\n\nBetCenterRoutingModule->BetCenterModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nBetCenterModule -->\n\nCoreModule->BetCenterModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBetCenterModule -->\n\nSharedModule->BetCenterModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/bet-center/bet-center.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomeComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    BetCenterRoutingModule\n                            \n                            \n                                    CoreModule\n                            \n                            \n                                    SharedModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BetCenterRoutingModule } from './bet-center-routing.module';\nimport { HomeComponent } from './home/home.component';\nimport { SharedModule } from '../shared';\nimport { CoreModule } from '../core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    BetCenterRoutingModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class BetCenterModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BetCenterRoutingModule.html":{"url":"modules/BetCenterRoutingModule.html","title":"module - BetCenterRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  BetCenterRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/bet-center/bet-center-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Route } from '../core';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  \"Route.withShell([\\\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\\\n    { path: 'home', component: HomeComponent, data: { title: 'Home' } }\\\n  ])\"\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BetCenterRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/CacheInterceptor.html":{"url":"interceptors/CacheInterceptor.html","title":"interceptor - CacheInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  CacheInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/cache.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Caches HTTP requests.\nUse ExtendedHttpClient fluent API to configure caching for each request.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                forceUpdate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpCacheService: HttpCacheService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/cache.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpCacheService\n                                                  \n                                                        \n                                                                    HttpCacheService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigure(options?: literal type | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/cache.interceptor.ts:23\n                            \n                        \n\n\n                \n                    \n                            Configures interceptor options\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    literal type | null\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                If update option is enabled, forces request to be made and updates cache entry.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CacheInterceptor\n\n                            \n                                \n                                    The configured instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/cache.interceptor.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            forceUpdate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        forceUpdate:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/cache.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, Subscriber } from 'rxjs';\n\nimport { HttpCacheService } from './http-cache.service';\n\n/**\n * Caches HTTP requests.\n * Use ExtendedHttpClient fluent API to configure caching for each request.\n */\n@Injectable()\nexport class CacheInterceptor implements HttpInterceptor {\n\n  private forceUpdate = false;\n\n  constructor(private httpCacheService: HttpCacheService) { }\n\n  /**\n   * Configures interceptor options\n   * @param {{update: boolean}} options If update option is enabled, forces request to be made and updates cache entry.\n   * @return {CacheInterceptor} The configured instance.\n   */\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\n    const instance = new CacheInterceptor(this.httpCacheService);\n    if (options && options.update) {\n      instance.forceUpdate = true;\n    }\n    return instance;\n  }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    if (request.method !== 'GET') {\n      return next.handle(request);\n    }\n\n    return new Observable((subscriber: Subscriber>) => {\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\n      if (cachedData !== null) {\n        // Create new response to avoid side-effects\n        subscriber.next(new HttpResponse(cachedData as Object));\n        subscriber.complete();\n      } else {\n        next.handle(request)\n          .subscribe(\n            event => {\n              if (event instanceof HttpResponse) {\n                this.httpCacheService.setCacheData(request.urlWithParams, event);\n              }\n              subscriber.next(event);\n            },\n            error => subscriber.error(error),\n            () => subscriber.complete()\n          );\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n  Modules\n  CoreModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nFooterComponent\n\nFooterComponent\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nCoreModule -->\n\nNotFoundComponent->CoreModule\n\n\n\n\n\nShellComponent\n\nShellComponent\n\nCoreModule -->\n\nShellComponent->CoreModule\n\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationGuard\n\nAuthenticationGuard\n\nCoreModule -->\n\nAuthenticationGuard->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nCoreModule -->\n\nCacheInterceptor->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nCoreModule -->\n\nHttpCacheService->CoreModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nCoreModule -->\n\nNotificationService->CoreModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FooterComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                NotFoundComponent\n                            \n                            \n                                ShellComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ApiPrefixInterceptor\n                            \n                            \n                                     AuthenticationGuard\n                            \n                            \n                                     AuthenticationService\n                            \n                            \n                                     CacheInterceptor\n                            \n                            \n                                     ErrorHandlerInterceptor\n                            \n                            \n                                     HttpCacheService\n                            \n                            \n                                     NotificationService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\n\nimport { SimpleNotificationsModule, SimpleNotificationsComponent } from 'angular2-notifications';\n\nimport { throwIfAlreadyLoaded } from './module-import-guard';\n\nimport { ShellComponent } from './shell/shell.component';\nimport { HeaderComponent } from './shell/header/header.component';\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { AuthenticationService } from './authentication/authentication.service';\nimport { AuthenticationGuard } from './authentication/authentication.guard';\nimport { HttpService } from './http/http.service';\nimport { HttpCacheService } from './http/http-cache.service';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\nimport { CacheInterceptor } from './http/cache.interceptor';\nimport { NotificationService } from './notification.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { FooterComponent } from './shell/footer/footer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    SimpleNotificationsModule.forRoot(),\n  ],\n  declarations: [\n    HeaderComponent,\n    ShellComponent,\n    NotFoundComponent,\n    FooterComponent,\n  ],\n  exports: [\n    SimpleNotificationsComponent\n  ],\n  providers: [\n    AuthenticationService,\n    AuthenticationGuard,\n    HttpCacheService,\n    ApiPrefixInterceptor,\n    ErrorHandlerInterceptor,\n    CacheInterceptor,\n    {\n      provide: HttpClient,\n      useClass: HttpService\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    },\n    NotificationService,\n  ]\n})\nexport class CoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport interface Credentials {\n  // Customize received credentials here\n  username: string;\n  token: string;\n}\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n  remember?: boolean;\n}\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n\n  private _credentials: Credentials | null;\n  redirectUrl: string;\n\n  constructor() {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable} The user credentials.\n   */\n  login(context: LoginContext): Observable {\n    // Replace by proper authentication call\n    const data = {\n      username: context.username,\n      token: '123456'\n    };\n    this.setCredentials(data, context.remember);\n    return of(data);\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable} True if the user was logged out successfully.\n   */\n  logout(): Observable {\n    // Customize credentials invalidation here\n    this.setCredentials();\n    return of(true);\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param {Credentials=} credentials The user credentials.\n   * @param {boolean=} remember True to remember credentials across sessions.\n   */\n  private setCredentials(credentials?: Credentials, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorHandlerInterceptor.html":{"url":"interceptors/ErrorHandlerInterceptor.html","title":"interceptor - ErrorHandlerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorHandlerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/error-handler.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Adds a default error handler to all requests.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorHandler\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        errorHandler(response: HttpEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    HttpEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/error-handler.interceptor.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent): Observable> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/shell/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/shell/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/shell/footer/footer.component.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    Place sticky footer content here.\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Place sticky footer content here.  '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/shell/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuHidden\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/shell/header/header.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/shell/header/header.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/shell/header/header.component.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/shell/header/header.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuHidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        menuHidden:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/shell/header/header.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/shell/header/header.component.ts:31\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../authentication/authentication.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  menuHidden = true;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService,\n  ) { }\n\n  ngOnInit() { }\n\n  toggleMenu() {\n    this.menuHidden = !this.menuHidden;\n  }\n\n  logout() {\n    this.authenticationService.logout()\n      .subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n  get username(): string | null {\n    const credentials = this.authenticationService.credentials;\n    return credentials ? credentials.username : null;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    Fixed navbar\n    \n      \n    \n    \n      \n        \n          \n             Home\n            (current)\n          \n        \n        \n          Link\n        \n        \n          Disabled\n        \n      \n      \n        \n          \n             Hi\n            {{username}} !\n          \n          \n            Profile\n            \n            \n               Logout\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Fixed navbar                                                       Home            (current)                                    Link                          Disabled                                                   Hi            {{username}} !                                Profile                                       Logout                              '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bet-center/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                quote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/bet-center/home/home.component.ts:11\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/bet-center/home/home.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bet-center/home/home.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quote\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        quote:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/bet-center/home/home.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  quote: string;\n  isLoading: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    setTimeout(() => {\n      this.isLoading = false;\n      this.quote = 'test success';\n    }, 2000);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      Hello world !\n    \n    \n    {{ quote }}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Hello world !            {{ quote }}  '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpCacheEntry.html":{"url":"interfaces/HttpCacheEntry.html","title":"interface - HttpCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http-cache.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        lastUpdated\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     HttpResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HttpResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastUpdated\n                                    \n                                \n                                \n                                    \n                                        lastUpdated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { each } from 'lodash';\n\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('HttpCacheService');\nconst cachePersistenceKey = 'httpCache';\n\nexport interface HttpCacheEntry {\n  lastUpdated: Date;\n  data: HttpResponse;\n}\n\n/**\n * Provides a cache facility for HTTP requests with configurable persistence policy.\n */\n@Injectable()\nexport class HttpCacheService {\n\n  private cachedData: { [key: string]: HttpCacheEntry; } = {};\n  private storage: Storage | null = null;\n\n  constructor() {\n    this.loadCacheData();\n  }\n\n  /**\n   * Sets the cache data for the specified request.\n   * @param {!string} url The request URL.\n   * @param {ResponseOptions} data The received data.\n   * @param {Date=} lastUpdated The cache last update, current date is used if not specified.\n   */\n  setCacheData(url: string, data: HttpResponse, lastUpdated?: Date) {\n    this.cachedData[url] = {\n      lastUpdated: lastUpdated || new Date(),\n      data: data\n    };\n    log.debug(`Cache set for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Gets the cached data for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?ResponseOptions} The cached data or null if no cached data exists for this request.\n   */\n  getCacheData(url: string): HttpResponse | null {\n    const cacheEntry = this.cachedData[url];\n\n    if (cacheEntry) {\n      log.debug(`Cache hit for key: \"${url}\"`);\n      return cacheEntry.data;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the cached entry for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?HttpCacheEntry} The cache entry or null if no cache entry exists for this request.\n   */\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\n    return this.cachedData[url] || null;\n  }\n\n  /**\n   * Clears the cached entry (if exists) for the specified request.\n   * @param {!string} url The request URL.\n   */\n  clearCache(url: string): void {\n    delete this.cachedData[url];\n    log.debug(`Cache cleared for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Cleans cache entries older than the specified date.\n   * @param {date=} expirationDate The cache expiration date. If no date is specified, all cache is cleared.\n   */\n  cleanCache(expirationDate?: Date) {\n    if (expirationDate) {\n      each(this.cachedData, (value: HttpCacheEntry, key: string) => {\n        if (expirationDate >= value.lastUpdated) {\n          delete this.cachedData[key];\n        }\n      });\n    } else {\n      this.cachedData = {};\n    }\n    this.saveCacheData();\n  }\n\n  /**\n   * Sets the cache persistence policy.\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\n   * @param {'local'|'session'=} persistence How the cache should be persisted, it can be either local or session\n   *   storage, or if no value is provided it will be only in-memory (default).\n   */\n  setPersistence(persistence?: 'local' | 'session') {\n    this.cleanCache();\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\n    this.loadCacheData();\n  }\n\n  private saveCacheData() {\n    if (this.storage) {\n      this.storage[cachePersistenceKey] = JSON.stringify(this.cachedData);\n    }\n  }\n\n  private loadCacheData() {\n    const data = this.storage ? this.storage[cachePersistenceKey] : null;\n    this.cachedData = data ? JSON.parse(data) : {};\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpCacheService.html":{"url":"injectables/HttpCacheService.html","title":"injectable - HttpCacheService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpCacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http-cache.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides a cache facility for HTTP requests with configurable persistence policy.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cachedData\n                            \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cleanCache\n                            \n                            \n                                clearCache\n                            \n                            \n                                getCacheData\n                            \n                            \n                                getHttpCacheEntry\n                            \n                            \n                                    Private\n                                loadCacheData\n                            \n                            \n                                    Private\n                                saveCacheData\n                            \n                            \n                                setCacheData\n                            \n                            \n                                setPersistence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http-cache.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cleanCache\n                            \n                            \n                        \n                    \n                \n                \n                    \ncleanCache(expirationDate?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Cleans cache entries older than the specified date.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        expirationDate\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The cache expiration date. If no date is specified, all cache is cleared.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearCache\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearCache(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:72\n                            \n                        \n\n\n                \n                    \n                            Clears the cached entry (if exists) for the specified request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The request URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCacheData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCacheData(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Gets the cached data for the specified request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The request URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpResponse | null\n\n                            \n                                \n                                    The cached data or null if no cached data exists for this request.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpCacheEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpCacheEntry(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Gets the cached entry for the specified request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The request URL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpCacheEntry | null\n\n                            \n                                \n                                    The cache entry or null if no cache entry exists for this request.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadCacheData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadCacheData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:113\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            saveCacheData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveCacheData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:107\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCacheData\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCacheData(url: string, data: HttpResponse, lastUpdated?: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Sets the cache data for the specified request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The request URL.\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                        \n                                                                    HttpResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The received data.\n\n                                                        \n                                                \n                                                \n                                                        lastUpdated\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                The cache last update, current date is used if not specified.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPersistence\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetPersistence(persistence?: \"local\" | \"session\")\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Sets the cache persistence policy.\nNote that changing the cache persistence will also clear the cache from its previous storage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        persistence\n                                                        \n                                                                    \"local\" | \"session\"\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                How the cache should be persisted, it can be either local or session\nstorage, or if no value is provided it will be only in-memory (default).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cachedData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cachedData:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            storage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storage:     Storage | null\n\n                    \n                \n                    \n                        \n                            Type :     Storage | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/http/http-cache.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { each } from 'lodash';\n\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('HttpCacheService');\nconst cachePersistenceKey = 'httpCache';\n\nexport interface HttpCacheEntry {\n  lastUpdated: Date;\n  data: HttpResponse;\n}\n\n/**\n * Provides a cache facility for HTTP requests with configurable persistence policy.\n */\n@Injectable()\nexport class HttpCacheService {\n\n  private cachedData: { [key: string]: HttpCacheEntry; } = {};\n  private storage: Storage | null = null;\n\n  constructor() {\n    this.loadCacheData();\n  }\n\n  /**\n   * Sets the cache data for the specified request.\n   * @param {!string} url The request URL.\n   * @param {ResponseOptions} data The received data.\n   * @param {Date=} lastUpdated The cache last update, current date is used if not specified.\n   */\n  setCacheData(url: string, data: HttpResponse, lastUpdated?: Date) {\n    this.cachedData[url] = {\n      lastUpdated: lastUpdated || new Date(),\n      data: data\n    };\n    log.debug(`Cache set for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Gets the cached data for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?ResponseOptions} The cached data or null if no cached data exists for this request.\n   */\n  getCacheData(url: string): HttpResponse | null {\n    const cacheEntry = this.cachedData[url];\n\n    if (cacheEntry) {\n      log.debug(`Cache hit for key: \"${url}\"`);\n      return cacheEntry.data;\n    }\n\n    return null;\n  }\n\n  /**\n   * Gets the cached entry for the specified request.\n   * @param {!string} url The request URL.\n   * @return {?HttpCacheEntry} The cache entry or null if no cache entry exists for this request.\n   */\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\n    return this.cachedData[url] || null;\n  }\n\n  /**\n   * Clears the cached entry (if exists) for the specified request.\n   * @param {!string} url The request URL.\n   */\n  clearCache(url: string): void {\n    delete this.cachedData[url];\n    log.debug(`Cache cleared for key: \"${url}\"`);\n    this.saveCacheData();\n  }\n\n  /**\n   * Cleans cache entries older than the specified date.\n   * @param {date=} expirationDate The cache expiration date. If no date is specified, all cache is cleared.\n   */\n  cleanCache(expirationDate?: Date) {\n    if (expirationDate) {\n      each(this.cachedData, (value: HttpCacheEntry, key: string) => {\n        if (expirationDate >= value.lastUpdated) {\n          delete this.cachedData[key];\n        }\n      });\n    } else {\n      this.cachedData = {};\n    }\n    this.saveCacheData();\n  }\n\n  /**\n   * Sets the cache persistence policy.\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\n   * @param {'local'|'session'=} persistence How the cache should be persisted, it can be either local or session\n   *   storage, or if no value is provided it will be only in-memory (default).\n   */\n  setPersistence(persistence?: 'local' | 'session') {\n    this.cleanCache();\n    this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\n    this.loadCacheData();\n  }\n\n  private saveCacheData() {\n    if (this.storage) {\n      this.storage[cachePersistenceKey] = JSON.stringify(this.cachedData);\n    }\n  }\n\n  private loadCacheData() {\n    const data = this.storage ? this.storage[cachePersistenceKey] : null;\n    this.cachedData = data ? JSON.parse(data) : {};\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpClient.html":{"url":"interfaces/HttpClient.html","title":"interface - HttpClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    cache\n                                \n                                \n                                    disableApiPrefix\n                                \n                                \n                                    skipErrorHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \ncache(forceUpdate?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:22\n                            \n                        \n\n\n                \n                    \n                            Enables caching for this request.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        forceUpdate\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Forces request to be made and updates cache entry.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    The new instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableApiPrefix\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableApiPrefix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Do not use API prefix for this request.\n\n\n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    The new instance.\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:28\n                            \n                        \n\n\n                \n                    \n                            Skips default error handler for this request.\n\n\n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    The new instance.\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { CacheInterceptor } from './cache.interceptor';\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @return {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n    /**\n     * Do not use API prefix for this request.\n     * @return {HttpClient} The new instance.\n     */\n    disableApiPrefix(): HttpClient;\n\n  }\n\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [\n        this.injector.get(ApiPrefixInterceptor),\n        this.injector.get(ErrorHandlerInterceptor)\n      ];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpClient {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({ update: forceUpdate });\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  disableApiPrefix(): HttpClient {\n    return this.removeInterceptor(ApiPrefixInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpInterceptorHandler.html":{"url":"classes/HttpInterceptorHandler.html","title":"class - HttpInterceptorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpInterceptorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        HttpHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(next: HttpHandler, interceptor: HttpInterceptor)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptor\n                                                  \n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handle\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandle(request: HttpRequest)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { CacheInterceptor } from './cache.interceptor';\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @return {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n    /**\n     * Do not use API prefix for this request.\n     * @return {HttpClient} The new instance.\n     */\n    disableApiPrefix(): HttpClient;\n\n  }\n\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [\n        this.injector.get(ApiPrefixInterceptor),\n        this.injector.get(ErrorHandlerInterceptor)\n      ];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpClient {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({ update: forceUpdate });\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  disableApiPrefix(): HttpClient {\n    return this.removeInterceptor(ApiPrefixInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/http/http.service.ts\n        \n\n            \n                Description\n            \n            \n                Extends HttpClient with per request configuration using dynamic interceptors.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInterceptor\n                            \n                            \n                                cache\n                            \n                            \n                                disableApiPrefix\n                            \n                            \n                                    Private\n                                removeInterceptor\n                            \n                            \n                                request\n                            \n                            \n                                skipErrorHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpHandler: HttpHandler, injector: Injector, interceptors: HttpInterceptor[])\n                    \n                \n                        \n                            \n                                Defined in src/app/core/http/http.service.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpHandler\n                                                  \n                                                        \n                                                                    HttpHandler\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        interceptors\n                                                  \n                                                        \n                                                                    HttpInterceptor[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addInterceptor(interceptor: HttpInterceptor)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptor\n                                                        \n                                                                    HttpInterceptor\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                            \n                        \n                    \n                \n                \n                    \ncache(forceUpdate?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        forceUpdate\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpClient\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableApiPrefix\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableApiPrefix()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:90\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HttpClient\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            removeInterceptor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeInterceptor(interceptorType: Function)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:103\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        interceptorType\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HttpService\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            request\n                            \n                            \n                        \n                    \n                \n                \n                    \nrequest(method?: any, url?: any, options?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        options\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            skipErrorHandler\n                            \n                            \n                        \n                    \n                \n                \n                    \nskipErrorHandler()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/http/http.service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     HttpClient\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, Injector, Optional } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\nimport { CacheInterceptor } from './cache.interceptor';\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\n\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\ndeclare module '@angular/common/http/src/client' {\n\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\n  // HttpClient with HttpService using dependency injection\n  export interface HttpClient {\n\n    /**\n     * Enables caching for this request.\n     * @param {boolean} forceUpdate Forces request to be made and updates cache entry.\n     * @return {HttpClient} The new instance.\n     */\n    cache(forceUpdate?: boolean): HttpClient;\n\n    /**\n     * Skips default error handler for this request.\n     * @return {HttpClient} The new instance.\n     */\n    skipErrorHandler(): HttpClient;\n\n    /**\n     * Do not use API prefix for this request.\n     * @return {HttpClient} The new instance.\n     */\n    disableApiPrefix(): HttpClient;\n\n  }\n\n}\n\n// From @angular/common/http/src/interceptor: allows to chain interceptors\nclass HttpInterceptorHandler implements HttpHandler {\n\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) { }\n\n  handle(request: HttpRequest): Observable> {\n    return this.interceptor.intercept(request, this.next);\n  }\n\n}\n\n/**\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\n * for better readability.\n *\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\n * HTTP_INTERCEPTORS token.\n */\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken('HTTP_DYNAMIC_INTERCEPTORS');\n\n/**\n * Extends HttpClient with per request configuration using dynamic interceptors.\n */\n@Injectable()\nexport class HttpService extends HttpClient {\n\n  constructor(private httpHandler: HttpHandler,\n              private injector: Injector,\n              @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []) {\n    super(httpHandler);\n\n    if (!this.interceptors) {\n      // Configure default interceptors that can be disabled here\n      this.interceptors = [\n        this.injector.get(ApiPrefixInterceptor),\n        this.injector.get(ErrorHandlerInterceptor)\n      ];\n    }\n  }\n\n  cache(forceUpdate?: boolean): HttpClient {\n    const cacheInterceptor = this.injector.get(CacheInterceptor).configure({ update: forceUpdate });\n    return this.addInterceptor(cacheInterceptor);\n  }\n\n  skipErrorHandler(): HttpClient {\n    return this.removeInterceptor(ErrorHandlerInterceptor);\n  }\n\n  disableApiPrefix(): HttpClient {\n    return this.removeInterceptor(ApiPrefixInterceptor);\n  }\n\n  // Override the original method to wire interceptors when triggering the request.\n  request(method?: any, url?: any, options?: any): any {\n    const handler = this.interceptors.reduceRight(\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\n      this.httpHandler\n    );\n    return new HttpClient(handler).request(method, url, options);\n  }\n\n  private removeInterceptor(interceptorType: Function): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.filter(i => !(i instanceof interceptorType))\n    );\n  }\n\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\n    return new HttpService(\n      this.httpHandler,\n      this.injector,\n      this.interceptors.concat([interceptor])\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/loader/loader.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/loader/loader.component.ts:11\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                    \n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/loader/loader.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/loader/loader.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/shared/loader/loader.component.ts:15\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  @Input() isLoading = false;\n  @Input() message: string;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\n    \n\n    \n        \n     {{message}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{message}}'\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                level\n                            \n                            \n                                    Static\n                                outputs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                    Static\n                                enableProductionMode\n                            \n                            \n                                error\n                            \n                            \n                                info\n                            \n                            \n                                    Private\n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source?: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/logger.service.ts:69\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            level\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        level:     \n\n                    \n                \n                    \n                        \n                            Default value : LogLevel.Debug\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:56\n                            \n                        \n\n                \n                    \n                        Current logging level.\nSet it to LogLevel.Off to disable logs completely.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            outputs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        outputs:     LogOutput[]\n\n                    \n                \n                    \n                        \n                            Type :     LogOutput[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:61\n                            \n                        \n\n                \n                    \n                        Additional log outputs.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debug\n                            \n                            \n                        \n                    \n                \n                \n                    \ndebug(...objects: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Logs messages or objects  with the debug level.\nWorks the same as console.log().\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            enableProductionMode\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        enableProductionMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            Enables production mode.\nSets logging level to LogLevel.Warning.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \nerror(...objects: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Logs messages or objects  with the error level.\nWorks the same as console.log().\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            info\n                            \n                            \n                        \n                    \n                \n                \n                    \ninfo(...objects: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:85\n                            \n                        \n\n\n                \n                    \n                            Logs messages or objects  with the info level.\nWorks the same as console.log().\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        log(func: Function, level: LogLevel, objects: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:105\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        func\n                                                        \n                                                                    Function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        level\n                                                        \n                                                                    LogLevel\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        objects\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            warn\n                            \n                            \n                        \n                    \n                \n                \n                    \nwarn(...objects: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/logger.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Logs messages or objects  with the warning level.\nWorks the same as console.log().\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        objects\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: Function, level: LogLevel, objects: any[]) {\n    if (level  output.apply(output, [this.source, level].concat(objects)));\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, formBuilder: FormBuilder, authenticationService: AuthenticationService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/user/login/login.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\n\nimport { AuthenticationService, Logger, NotificationService } from '../../core';\nimport { NotificationType, Notification } from '../../models';\n\nconst log = new Logger('Login');\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error: string;\n  loginForm: FormGroup;\n  isLoading = false;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private notificationService: NotificationService,\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit() { }\n\n  login() {\n    this.isLoading = true;\n    this.authenticationService.login(this.loginForm.value)\n      .pipe(finalize(() => {\n        this.loginForm.markAsPristine();\n        this.isLoading = false;\n      }))\n      .subscribe(credentials => {\n        log.debug(`${credentials.username} successfully logged in`);\n        const notification: Notification = new Notification({\n          title: 'Logged In',\n          content: 'Hey ' + credentials.username,\n          type: NotificationType.SUCCESS\n        });\n        this.notificationService.showNotification(notification);\n        // Get the redirect URL from our auth service\n        // If no redirect has been set, use the default\n        const redirect = this.authenticationService.redirectUrl ? this.authenticationService.redirectUrl : '/home';\n        // Redirect the user\n        this.router.navigate([redirect]);\n        // this.router.navigate(['/'], { replaceUrl: true });\n      }, error => {\n        log.debug(`Login error: ${error}`);\n        this.error = error;\n      });\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      remember: true\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n\n      \n        \n        Please sign in\n        \n          Username or password incorrect.\n        \n        Email address\n        \n        \n          Username is required\n        \n        Password\n        \n        \n          Password is required\n        \n        \n          \n             Remember me\n          \n        \n        \n           Login\n        &copy; 2017-2018\n      \n\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Please sign in                  Username or password incorrect.                Email address                          Username is required                Password                          Password is required                                       Remember me                                     Login        © 2017-2018            '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginContext.html":{"url":"interfaces/LoginContext.html","title":"interface - LoginContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                            Optional\n                                        remember\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remember\n                                    \n                                \n                                \n                                    \n                                        remember:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nexport interface Credentials {\n  // Customize received credentials here\n  username: string;\n  token: string;\n}\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n  remember?: boolean;\n}\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides a base for authentication workflow.\n * The Credentials interface as well as login/logout methods should be replaced with proper implementation.\n */\n@Injectable()\nexport class AuthenticationService {\n\n  private _credentials: Credentials | null;\n  redirectUrl: string;\n\n  constructor() {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Authenticates the user.\n   * @param {LoginContext} context The login parameters.\n   * @return {Observable} The user credentials.\n   */\n  login(context: LoginContext): Observable {\n    // Replace by proper authentication call\n    const data = {\n      username: context.username,\n      token: '123456'\n    };\n    this.setCredentials(data, context.remember);\n    return of(data);\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return {Observable} True if the user was logged out successfully.\n   */\n  logout(): Observable {\n    // Customize credentials invalidation here\n    this.setCredentials();\n    return of(true);\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return {boolean} True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return {Credentials} The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param {Credentials=} credentials The user credentials.\n   * @param {boolean=} remember True to remember credentials across sessions.\n   */\n  private setCredentials(credentials?: Credentials, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAuthenticationService.html":{"url":"classes/MockAuthenticationService.html","title":"class - MockAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/authentication/authentication.service.mock.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                credentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isAuthenticated\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            credentials\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentials:     Credentials | null\n\n                    \n                \n                    \n                        \n                            Type :     Credentials | null\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    username: 'test',\n    token: '123'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.mock.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.mock.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(context: LoginContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.mock.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                        \n                                                                    LoginContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/authentication/authentication.service.mock.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Observable\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\n\nimport { Credentials, LoginContext } from './authentication.service';\n\nexport class MockAuthenticationService {\n\n  credentials: Credentials | null = {\n    username: 'test',\n    token: '123'\n  };\n\n  login(context: LoginContext): Observable {\n    return of({\n      username: context.username,\n      token: '123456'\n    });\n  }\n\n  logout(): Observable {\n    this.credentials = null;\n    return of(true);\n  }\n\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                not-found.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                head\n                            \n                            \n                                imageNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_location: Location, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/not-found/not-found.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            goBack\n                            \n                            \n                        \n                    \n                \n                \n                    \ngoBack()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/not-found/not-found.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/not-found/not-found.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/not-found/not-found.component.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            head\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        head:     HTMLElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/not-found/not-found.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageNumber:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/not-found/not-found.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit, OnDestroy {\n\n  private head: HTMLElement;\n  imageNumber: number;\n\n  constructor(\n    private _location: Location,\n    private titleService: Title,\n  ) {\n    this.titleService.setTitle('404');\n    this.imageNumber = Math.floor(Math.random() * 2) + 1;\n    this.head = document.getElementsByTagName('head')[0];\n  }\n\n  ngOnInit(): void {\n    const link = document.createElement('link');\n    link.id = 'font-404';\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = '//fonts.googleapis.com/css?family=Open+Sans';\n    this.head.appendChild(link);\n  }\n\n  ngOnDestroy(): void {\n    const link = document.getElementById('font-404');\n    this.head.removeChild(link);\n  }\n\n  goBack(): void {\n    this._location.back();\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n      too fat to reach!\n      We cannot reach the page now, please try one of these instead!\n\n      \n        MENU\n          \n            home\n            go back\n          \n        \n      \n      \n        \n          home\n          go back\n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n        \n      \n      oh, it's gone :(\n      Angry Panda has eaten the page you are looking for, please try one of these instead\n      \n\n      \n        MENU\n          \n            home\n            go back\n          \n        \n      \n      \n        \n          home\n          go back\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  too fat to reach!      We cannot reach the page now, please try one of these instead!              MENU                      home            go back                                                home          go back                                                                    oh, it\\'s gone :(      Angry Panda has eaten the page you are looking for, please try one of these instead                    MENU                      home            go back                                                home          go back                    '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/notification.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/notification.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        content:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/notification.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/notification.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     NotificationType\n\n                    \n                \n                    \n                        \n                            Type :     NotificationType\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/notification.model.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationType } from './notification-type.enum';\n\nexport class Notification {\n  title: string;\n  content: string;\n  type: NotificationType;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/notification.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notification$\n                            \n                            \n                                    Private\n                                notificationSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                showNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/notification.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Tells root template to show a notifcation\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notification$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notification$:     \n\n                    \n                \n                    \n                        \n                            Default value : this.notificationSource.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/notification.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationSource\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationSource:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/notification.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Notification } from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  private notificationSource = new Subject();\n  notification$ = this.notificationSource.asObservable();\n\n  /**\n   * Tells root template to show a notifcation\n   *\n   * @param {Notification} notification\n   *\n   * @memberOf NotificationService\n   */\n  showNotification(notification: Notification) {\n    this.notificationSource.next(notification);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Route.html":{"url":"classes/Route.html","title":"class - Route","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Route\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides helper methods to create routes.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                withShell\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            withShell\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        withShell(routes: Routes)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Creates routes using the shell component and authentication.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        routes\n                                                        \n                                                                    Routes\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The routes to add.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ngRoute\n\n                            \n                                \n                                    The new route using shell as the base.\n\n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Route as ngRoute, Routes } from '@angular/router';\n\nimport { ShellComponent } from './shell/shell.component';\nimport { AuthenticationGuard } from './authentication/authentication.guard';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Route {\n\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return {Route} The new route using shell as the base.\n   */\n  static withShell(routes: Routes): ngRoute {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      canActivate: [AuthenticationGuard],\n      // Reuse ShellComponent instance when navigating between child views\n      data: { reuse: true }\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteReusableStrategy.html":{"url":"classes/RouteReusableStrategy.html","title":"class - RouteReusableStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteReusableStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/route-reusable-strategy.ts\n        \n\n            \n                Description\n            \n            \n                A route strategy allowing for explicit route reuse.\nUsed as a workaround for https://github.com/angular/angular/issues/18374\nTo reuse a given route, add data: { reuse: true } to the route definition.\n\n            \n\n            \n                Extends\n            \n            \n                    RouteReuseStrategy\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                retrieve\n                            \n                            \n                                    Public\n                                shouldAttach\n                            \n                            \n                                    Public\n                                shouldDetach\n                            \n                            \n                                    Public\n                                shouldReuseRoute\n                            \n                            \n                                    Public\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        retrieve(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DetachedRouteHandle | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldAttach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldAttach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:16\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldDetach\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldDetach(route: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldReuseRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:24\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        future\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        curr\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/core/route-reusable-strategy.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        detachedTree\n                                                        \n                                                                    DetachedRouteHandle | null\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return (future.routeConfig === curr.routeConfig) || future.data.reuse;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    LoaderComponent\n  ],\n  exports: [\n    LoaderComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShellComponent.html":{"url":"components/ShellComponent.html","title":"component - ShellComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ShellComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/shell/shell.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shell\n            \n\n            \n                styleUrls\n                shell.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shell.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/shell/shell.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss']\n})\nexport class ShellComponent {\n\n  constructor() { }\n\n}\n\n    \n\n    \n        \n\n\n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'ShellComponent', 'selector': 'app-shell'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShellComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                picture\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                displayFullName\n                            \n                            \n                                stringify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    Object\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            picture\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        picture:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/user.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            displayFullName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        displayFullName()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/user.model.ts:19\n                            \n                        \n\n\n                \n                    \n                            Display the full name of the user\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringify\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringify()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/models/user.model.ts:30\n                            \n                        \n\n\n                \n                    \n                            return a stringify version of the User, mostly for localstorage purpose\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: number;\n  firstName: string;\n  lastName: string;\n  picture: string;\n  email: string;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n\n  /**\n   * Display the full name of the user\n   *\n   * @returns {string}\n   *\n   * @memberOf User\n   */\n  public displayFullName(): string {\n    return this.firstName + ' ' + this.lastName;\n  }\n\n  /**\n   * return a stringify version of the User, mostly for localstorage purpose\n   *\n   * @returns {string}\n   *\n   * @memberOf User\n   */\n  stringify(): string {\n    let preObject: any;\n    preObject = {\n      id: this.id,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      picture: this.picture,\n      email: this.email,\n    };\n    return JSON.stringify(preObject);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n  Modules\n  UserModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nLoginComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UserRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../shared';\nimport { CoreModule } from '../core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    UserRoutingModule\n  ],\n  declarations: [LoginComponent]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  UserRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/user/user-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, data: { title: 'Login' } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/bet-center/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.guard.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationGuard\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.guard.ts\n            \n            \n                variable\n            \n            \n                log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.service.mock.ts\n            \n            \n                class\n            \n            \n                MockAuthenticationService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.service.ts\n            \n            \n                interface\n            \n            \n                Credentials\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.service.ts\n            \n            \n                interface\n            \n            \n                LoginContext\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/core/authentication/authentication.service.ts\n            \n            \n                variable\n            \n            \n                credentialsKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/http/error-handler.interceptor.ts\n            \n            \n                variable\n            \n            \n                log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/http/http-cache.service.ts\n            \n            \n                injectable\n            \n            \n                HttpCacheService\n            \n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                    src/app/core/http/http-cache.service.ts\n            \n            \n                interface\n            \n            \n                HttpCacheEntry\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/http/http-cache.service.ts\n            \n            \n                variable\n            \n            \n                cachePersistenceKey\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/http/http-cache.service.ts\n            \n            \n                variable\n            \n            \n                log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/http/http.service.ts\n            \n            \n                class\n            \n            \n                HttpInterceptorHandler\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/http/http.service.ts\n            \n            \n                injectable\n            \n            \n                HttpService\n            \n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                    src/app/core/http/http.service.ts\n            \n            \n                interface\n            \n            \n                HttpClient\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    src/app/core/http/http.service.ts\n            \n            \n                variable\n            \n            \n                HTTP_DYNAMIC_INTERCEPTORS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/core/logger.service.ts\n            \n            \n                class\n            \n            \n                Logger\n            \n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                    src/app/core/module-import-guard.ts\n            \n            \n                function\n            \n            \n                throwIfAlreadyLoaded\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/core/not-found/not-found.component.ts\n            \n            \n                component\n            \n            \n                NotFoundComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/core/notification.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationService\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                    src/app/core/route-reusable-strategy.ts\n            \n            \n                class\n            \n            \n                RouteReusableStrategy\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/app/core/route.service.ts\n            \n            \n                class\n            \n            \n                Route\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/app/core/shell/footer/footer.component.ts\n            \n            \n                component\n            \n            \n                FooterComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/core/shell/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/core/shell/shell.component.ts\n            \n            \n                component\n            \n            \n                ShellComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/models/notification.model.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/models/user.model.ts\n            \n            \n                class\n            \n            \n                User\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    src/app/shared/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/user/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/user/login/login.component.ts\n            \n            \n                variable\n            \n            \n                log\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/hmr.ts\n            \n            \n                variable\n            \n            \n                hmrBootstrap\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/main.ts\n            \n            \n                variable\n            \n            \n                bootstrap\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @fortawesome/fontawesome-free-webfonts : ^1.0.9\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Level   (src/.../level.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../logger.service.ts)\n                        \n                        \n                            NotificationType   (src/.../notification-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/level.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Level\n                    \n                \n                    \n                        \n                            The available options to set the Level of the Logger.\nSee Logger.\n\n                        \n                    \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n                        \n                            \n                                 LOG\n                            \n                        \n                        \n                            \n                                Value: 5\n                            \n                        \n            \n        \n\n    src/app/core/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                    \n                        \n                            Simple logger system with the possibility of registering custom outputs.\n4 different log levels are provided, with corresponding methods:\n\ndebug   : for debug information\ninfo    : for informative status of the application (success, ...)\nwarning : for non-critical errors that do not prevent normal application behavior\nerror   : for critical errors that prevent normal application behavior\n\nExample usage:\nimport { Logger } from 'app/core/logger.service';\n\nconst log = new Logger('myFile');\n...\nlog.debug('something happened');To disable debug and info logs in production, add this snippet to your root component:\n`\nexport class AppComponent implements OnInit {\n   ngOnInit() {\n     if (environment.production) {\n       Logger.enableProductionMode();\n     }\n     ...\n   }\n}\nIf you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n\n                        \n                    \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n            \n        \n\n    src/app/models/notification-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NotificationType\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value: 0\n                            \n                        \n                        \n                            \n                                 ALERT\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n                        \n                            \n                                 BARE\n                            \n                        \n                        \n                            \n                                Value: 4\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            throwIfAlreadyLoaded   (src/.../module-import-guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/module-import-guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            throwIfAlreadyLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \nthrowIfAlreadyLoaded(parentModule: any, moduleName: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        parentModule\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        moduleName\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBetFriendsCenter\nThis project was generated with Angular CLI version 6.0.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BetCenterModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BetCenterRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BetCenterModule\n\n\n\ncluster_BetCenterModule_declarations\n\n\n\ncluster_BetCenterModule_imports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nBetCenterModule\n\nBetCenterModule\n\nBetCenterModule -->\n\nHomeComponent->BetCenterModule\n\n\n\n\n\nBetCenterRoutingModule\n\nBetCenterRoutingModule\n\nBetCenterModule -->\n\nBetCenterRoutingModule->BetCenterModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nBetCenterModule -->\n\nCoreModule->BetCenterModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nBetCenterModule -->\n\nSharedModule->BetCenterModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nCoreModule -->\n\nFooterComponent->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nCoreModule -->\n\nHeaderComponent->CoreModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nCoreModule -->\n\nNotFoundComponent->CoreModule\n\n\n\n\n\nShellComponent\n\nShellComponent\n\nCoreModule -->\n\nShellComponent->CoreModule\n\n\n\n\n\nApiPrefixInterceptor\n\nApiPrefixInterceptor\n\nCoreModule -->\n\nApiPrefixInterceptor->CoreModule\n\n\n\n\n\nAuthenticationGuard\n\nAuthenticationGuard\n\nCoreModule -->\n\nAuthenticationGuard->CoreModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nCoreModule -->\n\nAuthenticationService->CoreModule\n\n\n\n\n\nCacheInterceptor\n\nCacheInterceptor\n\nCoreModule -->\n\nCacheInterceptor->CoreModule\n\n\n\n\n\nErrorHandlerInterceptor\n\nErrorHandlerInterceptor\n\nCoreModule -->\n\nErrorHandlerInterceptor->CoreModule\n\n\n\n\n\nHttpCacheService\n\nHttpCacheService\n\nCoreModule -->\n\nHttpCacheService->CoreModule\n\n\n\n\n\nNotificationService\n\nNotificationService\n\nCoreModule -->\n\nNotificationService->CoreModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nLoginComponent->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            7 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        7 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        5 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogOutput   (src/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogOutput\n                    \n                \n                    \n                        \n                            Log output handler function.\n\n                        \n                    \n                \n                    \n                        LogOutput:     function\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            cachePersistenceKey   (src/.../http-cache.service.ts)\n                        \n                        \n                            credentialsKey   (src/.../authentication.service.ts)\n                        \n                        \n                            hmrBootstrap   (src/.../hmr.ts)\n                        \n                        \n                            HTTP_DYNAMIC_INTERCEPTORS   (src/.../http.service.ts)\n                        \n                        \n                            log   (src/.../login.component.ts)\n                        \n                        \n                            log   (src/.../authentication.guard.ts)\n                        \n                        \n                            log   (src/.../error-handler.interceptor.ts)\n                        \n                        \n                            log   (src/.../http-cache.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        bootstrap:     \n\n                    \n                \n                    \n                        \n                            Default value : () => platformBrowserDynamic().bootstrapModule(AppModule)\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/http-cache.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cachePersistenceKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cachePersistenceKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'httpCache'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        log:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger('HttpCacheService')\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            credentialsKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        credentialsKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'credentials'\n                        \n                    \n\n\n            \n        \n\n    src/hmr.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hmrBootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hmrBootstrap:     \n\n                    \n                \n                    \n                        \n                            Default value : (module: any, bootstrap: () => Promise>) => {\n  let ngModule: NgModuleRef;\n  module.hot.accept();\n  bootstrap().then(mod => ngModule = mod);\n  module.hot.dispose(() => {\n    const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n    const elements = appRef.components.map(c => c.location.nativeElement);\n    const makeVisible = createNewHosts(elements);\n    ngModule.destroy();\n    makeVisible();\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_DYNAMIC_INTERCEPTORS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HTTP_DYNAMIC_INTERCEPTORS:     \n\n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('HTTP_DYNAMIC_INTERCEPTORS')\n                        \n                    \n\n                \n                    \n                        Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\nExcept for very specific needs, you should better configure these interceptors directly in the constructor below\nfor better readability.\nFor static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\nHTTP_INTERCEPTORS token.\n\n                    \n                \n\n            \n        \n\n    src/app/user/login/login.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        log:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger('Login')\n                        \n                    \n\n\n            \n        \n\n    src/app/core/authentication/authentication.guard.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        log:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger('AuthenticationGuard')\n                        \n                    \n\n\n            \n        \n\n    src/app/core/http/error-handler.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        log:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger('ErrorHandlerInterceptor')\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
